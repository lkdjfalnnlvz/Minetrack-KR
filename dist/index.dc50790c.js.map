{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","assets/js/main.js","assets/js/app.js","assets/js/servers.js","node_modules/uplot/dist/uPlot.esm.js","assets/js/scale.js","assets/js/util.js","assets/js/plugins.js","node_modules/@parcel/runtime-js/lib/runtime-d00a0414f3de2b46.js","assets/js/socket.js","assets/js/sort.js","assets/js/graph.js","assets/js/favorites.js","assets/js/percbar.js"],"sourcesContent":["\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","import { App } from './app'\r\n\r\nconst app = new App()\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  app.init()\r\n\r\n  window.addEventListener('resize', function () {\r\n    app.percentageBar.redraw()\r\n\r\n    // Delegate to GraphDisplayManager which can check if the resize is necessary\r\n    app.graphDisplayManager.requestResize()\r\n  }, false)\r\n}, false)\r\n","import { ServerRegistry } from './servers'\r\nimport { SocketManager } from './socket'\r\nimport { SortController } from './sort'\r\nimport { GraphDisplayManager } from './graph'\r\nimport { PercentageBar } from './percbar'\r\nimport { FavoritesManager } from './favorites'\r\nimport { Tooltip, Caption, formatNumber } from './util'\r\n\r\nexport class App {\r\n  publicConfig\r\n\r\n  constructor () {\r\n    this.tooltip = new Tooltip()\r\n    this.caption = new Caption()\r\n    this.serverRegistry = new ServerRegistry(this)\r\n    this.socketManager = new SocketManager(this)\r\n    this.sortController = new SortController(this)\r\n    this.graphDisplayManager = new GraphDisplayManager(this)\r\n    this.percentageBar = new PercentageBar(this)\r\n    this.favoritesManager = new FavoritesManager(this)\r\n\r\n    this._taskIds = []\r\n  }\r\n\r\n  // Called once the DOM is ready and the app can begin setup\r\n  init () {\r\n    this.socketManager.createWebSocket()\r\n  }\r\n\r\n  setPageReady (isReady) {\r\n    document.getElementById('push').style.display = isReady ? 'block' : 'none'\r\n    document.getElementById('footer').style.display = isReady ? 'block' : 'none'\r\n    document.getElementById('status-overlay').style.display = isReady ? 'none' : 'block'\r\n  }\r\n\r\n  setPublicConfig (publicConfig) {\r\n    if (publicConfig.graphDurationLabel) {\r\n      publicConfig.graphDurationLabel = this._formatGraphDurationLabel(publicConfig.graphDurationLabel)\r\n    }\r\n    this.publicConfig = publicConfig\r\n\r\n    this.serverRegistry.assignServers(publicConfig.servers)\r\n\r\n    // Start repeating frontend tasks once it has received enough data to be considered active\r\n    // This simplifies management logic at the cost of each task needing to safely handle empty data\r\n    this.initTasks()\r\n  }\r\n\r\n  _formatGraphDurationLabel (label) {\r\n    // \"336h\" -> \"2주\"와 같은 로직 구현\r\n    // 여기서는 간단한 예시로 \"h\"로 끝나는 경우를 처리합니다.\r\n    const match = label.match(/^(\\d+)h$/) // 숫자 + 'h' 패턴 매칭\r\n    if (match) {\r\n      const hours = parseInt(match[1])\r\n      const days = Math.floor(hours / 24)\r\n      const weeks = Math.floor(days / 7)\r\n\r\n      if (weeks > 0) {\r\n        return `${weeks}주`\r\n      } else if (days > 0) {\r\n        return `${days}일`\r\n      } else {\r\n        return `${hours}시간` // 24시간 미만일 경우 그대로 '시간'으로 표시\r\n      }\r\n    }\r\n    return label // 매칭되지 않으면 원래 레이블 반환\r\n  }\r\n\r\n  handleSyncComplete () {\r\n    this.caption.hide()\r\n\r\n    // Load favorites since all servers are registered\r\n    this.favoritesManager.loadLocalStorage()\r\n\r\n    // Run a single bulk server sort instead of per-add event since there may be multiple\r\n    this.sortController.show()\r\n    this.percentageBar.redraw()\r\n\r\n    // The data may not be there to correctly compute values, but run an attempt\r\n    // Otherwise they will be updated by #initTasks\r\n    this.updateGlobalStats()\r\n  }\r\n\r\n  initTasks () {\r\n    this._taskIds.push(setInterval(this.sortController.sortServers, 5000))\r\n  }\r\n\r\n  handleDisconnect () {\r\n    this.tooltip.hide()\r\n\r\n    // Reset individual tracker elements to flush any held data\r\n    this.serverRegistry.reset()\r\n    this.socketManager.reset()\r\n    this.sortController.reset()\r\n    this.graphDisplayManager.reset()\r\n    this.percentageBar.reset()\r\n\r\n    // Undefine publicConfig, resynced during the connection handshake\r\n    this.publicConfig = undefined\r\n\r\n    // Clear all task ids, if any\r\n    this._taskIds.forEach(clearInterval)\r\n\r\n    this._taskIds = []\r\n\r\n    // Reset hidden values created by #updateGlobalStats\r\n    this._lastTotalPlayerCount = undefined\r\n    this._lastServerRegistrationCount = undefined\r\n\r\n    // Reset modified DOM structures\r\n    document.getElementById('stat_totalPlayers').innerText = 0\r\n    document.getElementById('stat_networks').innerText = 0\r\n\r\n    this.setPageReady(false)\r\n  }\r\n\r\n  getTotalPlayerCount () {\r\n    return this.serverRegistry.getServerRegistrations()\r\n      .map(serverRegistration => serverRegistration.playerCount)\r\n      .reduce((sum, current) => sum + current, 0)\r\n  }\r\n\r\n  addServer = (serverId, payload, timestampPoints) => {\r\n    // Even if the backend has never pinged the server, the frontend is promised a placeholder object.\r\n    // result = undefined\r\n    // error = defined with \"Waiting\" description\r\n    // info = safely defined with configured data\r\n    const serverRegistration = this.serverRegistry.createServerRegistration(serverId)\r\n\r\n    serverRegistration.initServerStatus(payload)\r\n\r\n    // playerCountHistory is only defined when the backend has previous ping data\r\n    // undefined playerCountHistory means this is a placeholder ping generated by the backend\r\n    if (typeof payload.playerCountHistory !== 'undefined') {\r\n      // Push the historical data into the graph\r\n      // This will trim and format the data so it is ready for the graph to render once init\r\n      serverRegistration.addGraphPoints(payload.playerCountHistory, timestampPoints)\r\n\r\n      // Set initial playerCount to the payload's value\r\n      // This will always exist since it is explicitly generated by the backend\r\n      // This is used for any post-add rendering of things like the percentageBar\r\n      serverRegistration.playerCount = payload.playerCount\r\n    }\r\n\r\n    // Create the plot instance internally with the restructured and cleaned data\r\n    serverRegistration.buildPlotInstance()\r\n\r\n    // Handle the last known state (if any) as an incoming update\r\n    // This triggers the main update pipeline and enables centralized update handling\r\n    serverRegistration.updateServerStatus(payload, this.publicConfig.minecraftVersions)\r\n\r\n    // Allow the ServerRegistration to bind any DOM events with app instance context\r\n    serverRegistration.initEventListeners()\r\n  }\r\n\r\n  updateGlobalStats = () => {\r\n    // Only redraw when needed\r\n    // These operations are relatively cheap, but the site already does too much rendering\r\n    const totalPlayerCount = this.getTotalPlayerCount()\r\n\r\n    if (totalPlayerCount !== this._lastTotalPlayerCount) {\r\n      this._lastTotalPlayerCount = totalPlayerCount\r\n      document.getElementById('stat_totalPlayers').innerText = formatNumber(totalPlayerCount)\r\n    }\r\n\r\n    // Only redraw when needed\r\n    // These operations are relatively cheap, but the site already does too much rendering\r\n    const serverRegistrationCount = this.serverRegistry.getServerRegistrations().length\r\n\r\n    if (serverRegistrationCount !== this._lastServerRegistrationCount) {\r\n      this._lastServerRegistrationCount = serverRegistrationCount\r\n      document.getElementById('stat_networks').innerText = serverRegistrationCount\r\n    }\r\n  }\r\n}\r\n","import uPlot from 'uplot'\r\n\r\nimport { RelativeScale } from './scale'\r\n\r\nimport { formatNumber, formatTimestampSeconds, formatDate, formatMinecraftServerAddress, formatMinecraftVersions } from './util'\r\nimport { uPlotTooltipPlugin } from './plugins'\r\n\r\nimport MISSING_FAVICON from 'url:../images/missing_favicon.svg'\r\n\r\nexport class ServerRegistry {\r\n  constructor (app) {\r\n    this._app = app\r\n    this._serverIdsByName = []\r\n    this._serverDataById = []\r\n    this._registeredServers = []\r\n  }\r\n\r\n  assignServers (servers) {\r\n    for (let i = 0; i < servers.length; i++) {\r\n      const data = servers[i]\r\n      this._serverIdsByName[data.name] = i\r\n      this._serverDataById[i] = data\r\n    }\r\n  }\r\n\r\n  createServerRegistration (serverId) {\r\n    const serverData = this._serverDataById[serverId]\r\n    const serverRegistration = new ServerRegistration(this._app, serverId, serverData)\r\n    this._registeredServers[serverId] = serverRegistration\r\n    return serverRegistration\r\n  }\r\n\r\n  getServerRegistration (serverKey) {\r\n    if (typeof serverKey === 'string') {\r\n      const serverId = this._serverIdsByName[serverKey]\r\n      return this._registeredServers[serverId]\r\n    } else if (typeof serverKey === 'number') {\r\n      return this._registeredServers[serverKey]\r\n    }\r\n  }\r\n\r\n  getServerRegistrations = () => Object.values(this._registeredServers)\r\n\r\n  reset () {\r\n    this._serverIdsByName = []\r\n    this._serverDataById = []\r\n    this._registeredServers = []\r\n\r\n    // Reset modified DOM structures\r\n    document.getElementById('server-list').innerHTML = ''\r\n  }\r\n}\r\n\r\nexport class ServerRegistration {\r\n  playerCount = 0\r\n  isVisible = true\r\n  isFavorite = false\r\n  rankIndex\r\n  lastRecordData\r\n  lastPeakData\r\n\r\n  constructor (app, serverId, data) {\r\n    this._app = app\r\n    this.serverId = serverId\r\n    this.data = data\r\n    this._graphData = [[], []]\r\n    this._failedSequentialPings = 0\r\n  }\r\n\r\n  getGraphDataIndex () {\r\n    return this.serverId + 1\r\n  }\r\n\r\n  addGraphPoints (points, timestampPoints) {\r\n    this._graphData = [\r\n      timestampPoints.slice(),\r\n      points\r\n    ]\r\n  }\r\n\r\n  buildPlotInstance () {\r\n    const tickCount = 4\r\n\r\n    // eslint-disable-next-line new-cap\r\n    this._plotInstance = new uPlot({\r\n      plugins: [\r\n        uPlotTooltipPlugin((pos, id) => {\r\n          if (pos) {\r\n            const playerCount = this._graphData[1][id]\r\n\r\n            if (typeof playerCount !== 'number') {\r\n              this._app.tooltip.hide()\r\n            } else {\r\n              this._app.tooltip.set(pos.left, pos.top, 10, 10, `${formatNumber(playerCount)}명<br>${formatTimestampSeconds(this._graphData[0][id])}`)\r\n            }\r\n          } else {\r\n            this._app.tooltip.hide()\r\n          }\r\n        })\r\n      ],\r\n      height: 100,\r\n      width: 400,\r\n      cursor: {\r\n        y: false,\r\n        drag: {\r\n          setScale: false,\r\n          x: false,\r\n          y: false\r\n        },\r\n        sync: {\r\n          key: 'minetrack-server',\r\n          setSeries: true\r\n        }\r\n      },\r\n      series: [\r\n        {},\r\n        {\r\n          stroke: '#E9E581',\r\n          width: 2,\r\n          value: (_, raw) => `${formatNumber(raw)}명`,\r\n          spanGaps: true,\r\n          points: {\r\n            show: false\r\n          }\r\n        }\r\n      ],\r\n      axes: [\r\n        {\r\n          show: false\r\n        },\r\n        {\r\n          ticks: {\r\n            show: false\r\n          },\r\n          font: '14px \"Open Sans\", sans-serif',\r\n          stroke: '#A3A3A3',\r\n          size: 55,\r\n          grid: {\r\n            stroke: '#333',\r\n            width: 1\r\n          },\r\n          split: () => {\r\n            const { scaledMin, scaledMax, scale } = RelativeScale.scale(this._graphData[1], tickCount)\r\n            const ticks = RelativeScale.generateTicks(scaledMin, scaledMax, scale)\r\n            return ticks\r\n          }\r\n        }\r\n      ],\r\n      scales: {\r\n        y: {\r\n          auto: false,\r\n          range: () => {\r\n            const { scaledMin, scaledMax } = RelativeScale.scale(this._graphData[1], tickCount)\r\n            return [scaledMin, scaledMax]\r\n          }\r\n        }\r\n      },\r\n      legend: {\r\n        show: false\r\n      }\r\n    }, this._graphData, document.getElementById(`chart_${this.serverId}`))\r\n  }\r\n\r\n  handlePing (payload, timestamp) {\r\n    if (typeof payload.playerCount === 'number') {\r\n      this.playerCount = payload.playerCount\r\n\r\n      // Reset failed ping counter to ensure the next connection error\r\n      // doesn't instantly retrigger a layout change\r\n      this._failedSequentialPings = 0\r\n    } else {\r\n      // Attempt to retain a copy of the cached playerCount for up to N failed pings\r\n      // This prevents minor connection issues from constantly reshuffling the layout\r\n      if (++this._failedSequentialPings > 5) {\r\n        this.playerCount = 0\r\n      }\r\n    }\r\n\r\n    // Use payload.playerCount so nulls WILL be pushed into the graphing data\r\n    this._graphData[0].push(timestamp)\r\n    this._graphData[1].push(payload.playerCount)\r\n\r\n    // Trim graphData to within the max length by shifting out the leading elements\r\n    for (const series of this._graphData) {\r\n      if (series.length > this._app.publicConfig.serverGraphMaxLength) {\r\n        series.shift()\r\n      }\r\n    }\r\n\r\n    // Redraw the plot instance\r\n    this._plotInstance.setData(this._graphData)\r\n  }\r\n\r\n  updateServerRankIndex (rankIndex) {\r\n    this.rankIndex = rankIndex\r\n\r\n    document.getElementById(`ranking_${this.serverId}`).innerText = `#${rankIndex + 1}`\r\n  }\r\n\r\n  _renderValue (prefix, handler) {\r\n    const labelElement = document.getElementById(`${prefix}_${this.serverId}`)\r\n\r\n    labelElement.style.display = 'block'\r\n\r\n    const valueElement = document.getElementById(`${prefix}-value_${this.serverId}`)\r\n    const targetElement = valueElement || labelElement\r\n\r\n    if (targetElement) {\r\n      if (typeof handler === 'function') {\r\n        handler(targetElement)\r\n      } else {\r\n        targetElement.innerText = handler\r\n      }\r\n    }\r\n  }\r\n\r\n  _hideValue (prefix) {\r\n    const element = document.getElementById(`${prefix}_${this.serverId}`)\r\n\r\n    element.style.display = 'none'\r\n  }\r\n\r\n  updateServerStatus (ping, minecraftVersions) {\r\n    if (ping.versions) {\r\n      this._renderValue('version', formatMinecraftVersions(ping.versions, minecraftVersions[this.data.type]) || '')\r\n    }\r\n\r\n    if (ping.recordData) {\r\n      this._renderValue('record', (element) => {\r\n        if (ping.recordData.timestamp > 0) {\r\n          element.innerText = `${formatNumber(ping.recordData.playerCount)} (${formatDate(ping.recordData.timestamp)})`\r\n          element.title = `At ${formatDate(ping.recordData.timestamp)} ${formatTimestampSeconds(ping.recordData.timestamp)}`\r\n        } else {\r\n          element.innerText = formatNumber(ping.recordData.playerCount)\r\n        }\r\n      })\r\n\r\n      this.lastRecordData = ping.recordData\r\n    }\r\n\r\n    if (ping.graphPeakData) {\r\n      this._renderValue('peak', (element) => {\r\n        element.innerText = formatNumber(ping.graphPeakData.playerCount)\r\n        element.title = `${formatTimestampSeconds(ping.graphPeakData.timestamp)}에 달성`\r\n      })\r\n\r\n      this.lastPeakData = ping.graphPeakData\r\n    }\r\n\r\n    if (ping.error) {\r\n      this._hideValue('player-count')\r\n      this._renderValue('error', ping.error.message)\r\n    } else if (typeof ping.playerCount !== 'number') {\r\n      this._hideValue('player-count')\r\n\r\n      // If the frontend has freshly connection, and the server's last ping was in error, it may not contain an error object\r\n      // In this case playerCount will safely be null, so provide a generic error message instead\r\n      this._renderValue('error', 'Failed to ping')\r\n    } else if (typeof ping.playerCount === 'number') {\r\n      this._hideValue('error')\r\n      this._renderValue('player-count', formatNumber(ping.playerCount))\r\n    }\r\n\r\n    // An updated favicon has been sent, update the src\r\n    if (ping.favicon) {\r\n      const faviconElement = document.getElementById(`favicon_${this.serverId}`)\r\n\r\n      // Since favicons may be URLs, only update the attribute when it has changed\r\n      // Otherwise the browser may send multiple requests to the same URL\r\n      if (faviconElement.getAttribute('src') !== ping.favicon) {\r\n        faviconElement.setAttribute('src', ping.favicon)\r\n      }\r\n    }\r\n  }\r\n\r\n  initServerStatus (latestPing) {\r\n    const serverElement = document.createElement('div')\r\n\r\n    serverElement.id = `container_${this.serverId}`\r\n    serverElement.innerHTML = `<div class=\"column column-favicon\">\r\n        <img class=\"server-favicon\" src=\"${latestPing.favicon || MISSING_FAVICON}\" id=\"favicon_${this.serverId}\" title=\"${this.data.name}\\n${formatMinecraftServerAddress(this.data.ip, this.data.port)}\">\r\n        <span class=\"server-rank\" id=\"ranking_${this.serverId}\"></span>\r\n      </div>\r\n      <div class=\"column column-status\">\r\n        <h3 class=\"server-name\"><span class=\"${this._app.favoritesManager.getIconClass(this.isFavorite)}\" id=\"favorite-toggle_${this.serverId}\"></span> ${this.data.name}</h3>\r\n        <span class=\"server-error\" id=\"error_${this.serverId}\"></span>\r\n        <span class=\"server-label\" id=\"player-count_${this.serverId}\">접속자 수: <span class=\"server-value\" id=\"player-count-value_${this.serverId}\"></span></span>\r\n        <span class=\"server-label\" id=\"peak_${this.serverId}\">${this._app.publicConfig.graphDurationLabel}간 최고 접속자: <span class=\"server-value\" id=\"peak-value_${this.serverId}\">-</span></span>\r\n        <span class=\"server-label\" id=\"record_${this.serverId}\">최고 기록: <span class=\"server-value\" id=\"record-value_${this.serverId}\">-</span></span>\r\n        <span class=\"server-label\" id=\"version_${this.serverId}\"></span>\r\n      </div>\r\n      <div class=\"column column-graph\" id=\"chart_${this.serverId}\"></div>`\r\n\r\n    serverElement.setAttribute('class', 'server')\r\n\r\n    document.getElementById('server-list').appendChild(serverElement)\r\n  }\r\n\r\n  updateHighlightedValue (selectedCategory) {\r\n    ['player-count', 'peak', 'record'].forEach((category) => {\r\n      const labelElement = document.getElementById(`${category}_${this.serverId}`)\r\n      const valueElement = document.getElementById(`${category}-value_${this.serverId}`)\r\n\r\n      if (selectedCategory && category === selectedCategory) {\r\n        labelElement.setAttribute('class', 'server-highlighted-label')\r\n        valueElement.setAttribute('class', 'server-highlighted-value')\r\n      } else {\r\n        labelElement.setAttribute('class', 'server-label')\r\n        valueElement.setAttribute('class', 'server-value')\r\n      }\r\n    })\r\n  }\r\n\r\n  initEventListeners () {\r\n    document.getElementById(`favorite-toggle_${this.serverId}`).addEventListener('click', () => {\r\n      this._app.favoritesManager.handleFavoriteButtonClick(this)\r\n    }, false)\r\n  }\r\n}\r\n","/**\n* Copyright (c) 2020, Leon Sorokin\n* All rights reserved. (MIT Licensed)\n*\n* uPlot.js (μPlot)\n* A small, fast chart for time series, lines, areas, ohlc & bars\n* https://github.com/leeoniya/uPlot (v1.0.11)\n*/\n\nfunction debounce(fn, time) {\n\tlet pending = null;\n\n\tfunction run() {\n\t\tpending = null;\n\t\tfn();\n\t}\n\n\treturn function() {\n\t\tclearTimeout(pending);\n\t\tpending = setTimeout(run, time);\n\t}\n}\n\n// binary search for index of closest value\nfunction closestIdx(num, arr, lo, hi) {\n\tlet mid;\n\tlo = lo || 0;\n\thi = hi || arr.length - 1;\n\tlet bitwise = hi <= 2147483647;\n\n\twhile (hi - lo > 1) {\n\t\tmid = bitwise ? (lo + hi) >> 1 : floor((lo + hi) / 2);\n\n\t\tif (arr[mid] < num)\n\t\t\tlo = mid;\n\t\telse\n\t\t\thi = mid;\n\t}\n\n\tif (num - arr[lo] <= arr[hi] - num)\n\t\treturn lo;\n\n\treturn hi;\n}\n\nfunction getMinMax(data, _i0, _i1) {\n//\tconsole.log(\"getMinMax()\");\n\n\tlet _min = inf;\n\tlet _max = -inf;\n\n\tfor (let i = _i0; i <= _i1; i++) {\n\t\tif (data[i] != null) {\n\t\t\t_min = min(_min, data[i]);\n\t\t\t_max = max(_max, data[i]);\n\t\t}\n\t}\n\n\treturn [_min, _max];\n}\n\n// this ensures that non-temporal/numeric y-axes get multiple-snapped padding added above/below\n// TODO: also account for incrs when snapping to ensure top of axis gets a tick & value\nfunction rangeNum(min, max, mult, extra) {\n\t// auto-scale Y\n\tconst delta = max - min;\n\tconst mag = log10(delta || abs(max) || 1);\n\tconst exp = floor(mag);\n\tconst incr = pow(10, exp) * mult;\n\tconst buf = delta == 0 ? incr : 0;\n\n\tlet snappedMin = round6(incrRoundDn(min - buf, incr));\n\tlet snappedMax = round6(incrRoundUp(max + buf, incr));\n\n\tif (extra) {\n\t\t// for flat data, always use 0 as one chart extreme & place data in center\n\t\tif (delta == 0) {\n\t\t\tif (max > 0) {\n\t\t\t\tsnappedMin = 0;\n\t\t\t\tsnappedMax = max * 2;\n\t\t\t}\n\t\t\telse if (max < 0) {\n\t\t\t\tsnappedMax = 0;\n\t\t\t\tsnappedMin = min * 2;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// if buffer is too small, increase it\n\t\t\tif (snappedMax - max < incr)\n\t\t\t\tsnappedMax += incr;\n\n\t\t\tif (min - snappedMin < incr)\n\t\t\t\tsnappedMin -= incr;\n\n\t\t\t// if original data never crosses 0, use 0 as one chart extreme\n\t\t\tif (min >= 0 && snappedMin < 0)\n\t\t\t\tsnappedMin = 0;\n\n\t\t\tif (max <= 0 && snappedMax > 0)\n\t\t\t\tsnappedMax = 0;\n\t\t}\n\t}\n\n\treturn [snappedMin, snappedMax];\n}\n\nconst M = Math;\n\nconst abs = M.abs;\nconst floor = M.floor;\nconst round = M.round;\nconst ceil = M.ceil;\nconst min = M.min;\nconst max = M.max;\nconst pow = M.pow;\nconst log10 = M.log10;\nconst PI = M.PI;\n\nconst inf = Infinity;\n\nfunction incrRound(num, incr) {\n\treturn round(num/incr)*incr;\n}\n\nfunction clamp(num, _min, _max) {\n\treturn min(max(num, _min), _max);\n}\n\nfunction fnOrSelf(v) {\n\treturn typeof v == \"function\" ? v : () => v;\n}\n\nfunction incrRoundUp(num, incr) {\n\treturn ceil(num/incr)*incr;\n}\n\nfunction incrRoundDn(num, incr) {\n\treturn floor(num/incr)*incr;\n}\n\nfunction round3(val) {\n\treturn round(val * 1e3) / 1e3;\n}\n\nfunction round6(val) {\n\treturn round(val * 1e6) / 1e6;\n}\n\n//export const assign = Object.assign;\n\nconst isArr = Array.isArray;\n\nfunction isStr(v) {\n\treturn typeof v === 'string';\n}\n\nfunction isObj(v) {\n\treturn typeof v === 'object' && v !== null;\n}\n\nfunction copy(o) {\n\tlet out;\n\n\tif (isArr(o))\n\t\tout = o.map(copy);\n\telse if (isObj(o)) {\n\t\tout = {};\n\t\tfor (var k in o)\n\t\t\tout[k] = copy(o[k]);\n\t}\n\telse\n\t\tout = o;\n\n\treturn out;\n}\n\nfunction assign(targ) {\n\tlet args = arguments;\n\n\tfor (let i = 1; i < args.length; i++) {\n\t\tlet src = args[i];\n\n\t\tfor (let key in src) {\n\t\t\tif (isObj(targ[key]))\n\t\t\t\tassign(targ[key], copy(src[key]));\n\t\t\telse\n\t\t\t\ttarg[key] = copy(src[key]);\n\t\t}\n\t}\n\n\treturn targ;\n}\n\nconst WIDTH = \"width\";\nconst HEIGHT = \"height\";\nconst TOP = \"top\";\nconst BOTTOM = \"bottom\";\nconst LEFT = \"left\";\nconst RIGHT = \"right\";\nconst firstChild = \"firstChild\";\nconst createElement = \"createElement\";\nconst hexBlack = \"#000\";\nconst classList = \"classList\";\n\nconst mousemove = \"mousemove\";\nconst mousedown = \"mousedown\";\nconst mouseup = \"mouseup\";\nconst mouseenter = \"mouseenter\";\nconst mouseleave = \"mouseleave\";\nconst dblclick = \"dblclick\";\nconst resize = \"resize\";\nconst scroll = \"scroll\";\n\nconst rAF = requestAnimationFrame;\nconst doc = document;\nconst win = window;\nconst pxRatio = devicePixelRatio;\n\nfunction addClass(el, c) {\n\tc != null && el[classList].add(c);\n}\n\nfunction remClass(el, c) {\n\tel[classList].remove(c);\n}\n\nfunction setStylePx(el, name, value) {\n\tel.style[name] = value + \"px\";\n}\n\nfunction placeTag(tag, cls, targ, refEl) {\n\tlet el = doc[createElement](tag);\n\n\tif (cls != null)\n\t\taddClass(el, cls);\n\n\tif (targ != null)\n\t\ttarg.insertBefore(el, refEl);\n\n\treturn el;\n}\n\nfunction placeDiv(cls, targ) {\n\treturn placeTag(\"div\", cls, targ);\n}\n\nfunction trans(el, xPos, yPos) {\n\tel.style.transform = \"translate(\" + xPos + \"px,\" + yPos + \"px)\";\n}\n\nconst evOpts = {passive: true};\n\nfunction on(ev, el, cb) {\n\tel.addEventListener(ev, cb, evOpts);\n}\n\nfunction off(ev, el, cb) {\n\tel.removeEventListener(ev, cb, evOpts);\n}\n\nconst months = [\n\t\"January\",\n\t\"February\",\n\t\"March\",\n\t\"April\",\n\t\"May\",\n\t\"June\",\n\t\"July\",\n\t\"August\",\n\t\"September\",\n\t\"October\",\n\t\"November\",\n\t\"December\",\n];\n\nconst days = [\n\t\"Sunday\",\n\t\"Monday\",\n\t\"Tuesday\",\n\t\"Wednesday\",\n\t\"Thursday\",\n\t\"Friday\",\n\t\"Saturday\",\n];\n\nfunction slice3(str) {\n\treturn str.slice(0, 3);\n}\n\nconst days3 =  days.map(slice3);\n\nconst months3 =  months.map(slice3);\n\nconst engNames = {\n\tMMMM: months,\n\tMMM:  months3,\n\tWWWW: days,\n\tWWW:  days3,\n};\n\nfunction zeroPad2(int) {\n\treturn (int < 10 ? '0' : '') + int;\n}\n\nfunction zeroPad3(int) {\n\treturn (int < 10 ? '00' : int < 100 ? '0' : '') + int;\n}\n\n/*\nfunction suffix(int) {\n\tlet mod10 = int % 10;\n\n\treturn int + (\n\t\tmod10 == 1 && int != 11 ? \"st\" :\n\t\tmod10 == 2 && int != 12 ? \"nd\" :\n\t\tmod10 == 3 && int != 13 ? \"rd\" : \"th\"\n\t);\n}\n*/\n\nconst getFullYear = 'getFullYear';\nconst getMonth = 'getMonth';\nconst getDate = 'getDate';\nconst getDay = 'getDay';\nconst getHours = 'getHours';\nconst getMinutes = 'getMinutes';\nconst getSeconds = 'getSeconds';\nconst getMilliseconds = 'getMilliseconds';\n\nconst subs = {\n\t// 2019\n\tYYYY:\td => d[getFullYear](),\n\t// 19\n\tYY:\t\td => (d[getFullYear]()+'').slice(2),\n\t// July\n\tMMMM:\t(d, names) => names.MMMM[d[getMonth]()],\n\t// Jul\n\tMMM:\t(d, names) => names.MMM[d[getMonth]()],\n\t// 07\n\tMM:\t\td => zeroPad2(d[getMonth]()+1),\n\t// 7\n\tM:\t\td => d[getMonth]()+1,\n\t// 09\n\tDD:\t\td => zeroPad2(d[getDate]()),\n\t// 9\n\tD:\t\td => d[getDate](),\n\t// Monday\n\tWWWW:\t(d, names) => names.WWWW[d[getDay]()],\n\t// Mon\n\tWWW:\t(d, names) => names.WWW[d[getDay]()],\n\t// 03\n\tHH:\t\td => zeroPad2(d[getHours]()),\n\t// 3\n\tH:\t\td => d[getHours](),\n\t// 9 (12hr, unpadded)\n\th:\t\td => {let h = d[getHours](); return h == 0 ? 12 : h > 12 ? h - 12 : h;},\n\t// AM\n\tAA:\t\td => d[getHours]() >= 12 ? 'PM' : 'AM',\n\t// am\n\taa:\t\td => d[getHours]() >= 12 ? 'pm' : 'am',\n\t// a\n\ta:\t\td => d[getHours]() >= 12 ? 'p' : 'a',\n\t// 09\n\tmm:\t\td => zeroPad2(d[getMinutes]()),\n\t// 9\n\tm:\t\td => d[getMinutes](),\n\t// 09\n\tss:\t\td => zeroPad2(d[getSeconds]()),\n\t// 9\n\ts:\t\td => d[getSeconds](),\n\t// 374\n\tfff:\td => zeroPad3(d[getMilliseconds]()),\n};\n\nfunction fmtDate(tpl, names) {\n\tnames = names || engNames;\n\tlet parts = [];\n\n\tlet R = /\\{([a-z]+)\\}|[^{]+/gi, m;\n\n\twhile (m = R.exec(tpl))\n\t\tparts.push(m[0][0] == '{' ? subs[m[1]] : m[0]);\n\n\treturn d => {\n\t\tlet out = '';\n\n\t\tfor (let i = 0; i < parts.length; i++)\n\t\t\tout += typeof parts[i] == \"string\" ? parts[i] : parts[i](d, names);\n\n\t\treturn out;\n\t}\n}\n\n// https://stackoverflow.com/questions/15141762/how-to-initialize-a-javascript-date-to-a-particular-time-zone/53652131#53652131\nfunction tzDate(date, tz) {\n\tlet date2;\n\n\t// perf optimization\n\tif (tz == 'Etc/UTC')\n\t\tdate2 = new Date(+date + date.getTimezoneOffset() * 6e4);\n\telse {\n\t\tdate2 = new Date(date.toLocaleString('en-US', {timeZone: tz}));\n\t\tdate2.setMilliseconds(date[getMilliseconds]());\n\t}\n\n\treturn date2;\n}\n\n//export const series = [];\n\n// default formatters:\n\nfunction genIncrs(minExp, maxExp, mults) {\n\tlet incrs = [];\n\n\tfor (let exp = minExp; exp < maxExp; exp++) {\n\t\tfor (let i = 0; i < mults.length; i++) {\n\t\t\tlet incr = mults[i] * pow(10, exp);\n\t\t\tincrs.push(+incr.toFixed(abs(exp)));\n\t\t}\n\t}\n\n\treturn incrs;\n}\n\nconst incrMults = [1,2,5];\n\nconst decIncrs = genIncrs(-12, 0, incrMults);\n\nconst intIncrs = genIncrs(0, 12, incrMults);\n\nconst numIncrs = decIncrs.concat(intIncrs);\n\nlet s = 1,\n\tm = 60,\n\th = m * m,\n\td = h * 24,\n\tmo = d * 30,\n\ty = d * 365;\n\n// starting below 1e-3 is a hack to allow the incr finder to choose & bail out at incr < 1ms\nconst timeIncrs =  [5e-4].concat(genIncrs(-3, 0, incrMults), [\n\t// minute divisors (# of secs)\n\t1,\n\t5,\n\t10,\n\t15,\n\t30,\n\t// hour divisors (# of mins)\n\tm,\n\tm * 5,\n\tm * 10,\n\tm * 15,\n\tm * 30,\n\t// day divisors (# of hrs)\n\th,\n\th * 2,\n\th * 3,\n\th * 4,\n\th * 6,\n\th * 8,\n\th * 12,\n\t// month divisors TODO: need more?\n\td,\n\td * 2,\n\td * 3,\n\td * 4,\n\td * 5,\n\td * 6,\n\td * 7,\n\td * 8,\n\td * 9,\n\td * 10,\n\td * 15,\n\t// year divisors (# months, approx)\n\tmo,\n\tmo * 2,\n\tmo * 3,\n\tmo * 4,\n\tmo * 6,\n\t// century divisors\n\ty,\n\ty * 2,\n\ty * 5,\n\ty * 10,\n\ty * 25,\n\ty * 50,\n\ty * 100,\n]);\n\nfunction timeAxisStamps(stampCfg, fmtDate) {\n\treturn stampCfg.map(s => [\n\t\ts[0],\n\t\tfmtDate(s[1]),\n\t\ts[2],\n\t\tfmtDate(s[4] ? s[1] + s[3] : s[3]),\n\t]);\n}\n\nconst yyyy = \"{YYYY}\";\nconst NLyyyy = \"\\n\" + yyyy;\nconst md = \"{M}/{D}\";\nconst NLmd = \"\\n\" + md;\n\nconst aa = \"{aa}\";\nconst hmm = \"{h}:{mm}\";\nconst hmmaa = hmm + aa;\nconst ss = \":{ss}\";\n\n// [0]: minimum num secs in the tick incr\n// [1]: normal tick format\n// [2]: when a differing <x> is encountered - 1: sec, 2: min, 3: hour, 4: day, 5: week, 6: month, 7: year\n// [3]: use a longer more contextual format\n// [4]: modes: 0: replace [1] -> [3], 1: concat [1] + [3]\nconst _timeAxisStamps = [\n\t[y,        yyyy,            7,   \"\",                    1],\n\t[d * 28,   \"{MMM}\",         7,   NLyyyy,                1],\n\t[d,        md,              7,   NLyyyy,                1],\n\t[h,        \"{h}\" + aa,      4,   NLmd,                  1],\n\t[m,        hmmaa,           4,   NLmd,                  1],\n\t[s,        ss,              2,   NLmd  + \" \" + hmmaa,   1],\n\t[1e-3,     ss + \".{fff}\",   2,   NLmd  + \" \" + hmmaa,   1],\n];\n\n// TODO: will need to accept spaces[] and pull incr into the loop when grid will be non-uniform, eg for log scales.\n// currently we ignore this for months since they're *nearly* uniform and the added complexity is not worth it\nfunction timeAxisVals(tzDate, stamps) {\n\treturn (self, splits, space, incr) => {\n\t\tlet s = stamps.find(e => incr >= e[0]) || stamps[stamps.length - 1];\n\n\t\t// these track boundaries when a full label is needed again\n\t\tlet prevYear = null;\n\t\tlet prevDate = null;\n\t\tlet prevMinu = null;\n\n\t\treturn splits.map((split, i) => {\n\t\t\tlet date = tzDate(split);\n\n\t\t\tlet newYear = date[getFullYear]();\n\t\t\tlet newDate = date[getDate]();\n\t\t\tlet newMinu = date[getMinutes]();\n\n\t\t\tlet diffYear = newYear != prevYear;\n\t\t\tlet diffDate = newDate != prevDate;\n\t\t\tlet diffMinu = newMinu != prevMinu;\n\n\t\t\tlet stamp = s[2] == 7 && diffYear || s[2] == 4 && diffDate || s[2] == 2 && diffMinu ? s[3] : s[1];\n\n\t\t\tprevYear = newYear;\n\t\t\tprevDate = newDate;\n\t\t\tprevMinu = newMinu;\n\n\t\t\treturn stamp(date);\n\t\t});\n\t}\n}\n\nfunction mkDate(y, m, d) {\n\treturn new Date(y, m, d);\n}\n\n// the ensures that axis ticks, values & grid are aligned to logical temporal breakpoints and not an arbitrary timestamp\n// https://www.timeanddate.com/time/dst/\n// https://www.timeanddate.com/time/dst/2019.html\n// https://www.epochconverter.com/timezones\nfunction timeAxisSplits(tzDate) {\n\treturn (self, scaleMin, scaleMax, incr, pctSpace) => {\n\t\tlet splits = [];\n\t\tlet isMo = incr >= mo && incr < y;\n\n\t\t// get the timezone-adjusted date\n\t\tlet minDate = tzDate(scaleMin);\n\t\tlet minDateTs = minDate / 1e3;\n\n\t\t// get ts of 12am (this lands us at or before the original scaleMin)\n\t\tlet minMin = mkDate(minDate[getFullYear](), minDate[getMonth](), isMo ? 1 : minDate[getDate]());\n\t\tlet minMinTs = minMin / 1e3;\n\n\t\tif (isMo) {\n\t\t\tlet moIncr = incr / mo;\n\t\t//\tlet tzOffset = scaleMin - minDateTs;\t\t// needed?\n\t\t\tlet split = minDateTs == minMinTs ? minDateTs : mkDate(minMin[getFullYear](), minMin[getMonth]() + moIncr, 1) / 1e3;\n\t\t\tlet splitDate = new Date(split * 1e3);\n\t\t\tlet baseYear = splitDate[getFullYear]();\n\t\t\tlet baseMonth = splitDate[getMonth]();\n\n\t\t\tfor (let i = 0; split <= scaleMax; i++) {\n\t\t\t\tlet next = mkDate(baseYear, baseMonth + moIncr * i, 1);\n\t\t\t\tlet offs = next - tzDate(next / 1e3);\n\n\t\t\t\tsplit = (+next + offs) / 1e3;\n\n\t\t\t\tif (split <= scaleMax)\n\t\t\t\t\tsplits.push(split);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlet incr0 = incr >= d ? d : incr;\n\t\t\tlet tzOffset = floor(scaleMin) - floor(minDateTs);\n\t\t\tlet split = minMinTs + tzOffset + incrRoundUp(minDateTs - minMinTs, incr0);\n\t\t\tsplits.push(split);\n\n\t\t\tlet date0 = tzDate(split);\n\n\t\t\tlet prevHour = date0[getHours]() + (date0[getMinutes]() / m) + (date0[getSeconds]() / h);\n\t\t\tlet incrHours = incr / h;\n\n\t\t\twhile (1) {\n\t\t\t\tsplit = round3(split + incr);\n\n\t\t\t\tlet expectedHour = floor(round6(prevHour + incrHours)) % 24;\n\t\t\t\tlet splitDate = tzDate(split);\n\t\t\t\tlet actualHour = splitDate.getHours();\n\n\t\t\t\tlet dstShift = actualHour - expectedHour;\n\n\t\t\t\tif (dstShift > 1)\n\t\t\t\t\tdstShift = -1;\n\n\t\t\t\tsplit -= dstShift * h;\n\n\t\t\t\tif (split > scaleMax)\n\t\t\t\t\tbreak;\n\n\t\t\t\tprevHour = (prevHour + incrHours) % 24;\n\n\t\t\t\t// add a tick only if it's further than 70% of the min allowed label spacing\n\t\t\t\tlet prevSplit = splits[splits.length - 1];\n\t\t\t\tlet pctIncr = round3((split - prevSplit) / incr);\n\n\t\t\t\tif (pctIncr * pctSpace >= .7)\n\t\t\t\t\tsplits.push(split);\n\t\t\t}\n\t\t}\n\n\t\treturn splits;\n\t}\n}\n\nfunction timeSeriesStamp(stampCfg, fmtDate) {\n\treturn fmtDate(stampCfg);\n}\nconst _timeSeriesStamp = '{YYYY}-{MM}-{DD} {h}:{mm}{aa}';\n\nfunction timeSeriesVal(tzDate, stamp) {\n\treturn (self, val) => stamp(tzDate(val));\n}\n\nfunction cursorPoint(self, si) {\n\tlet s = self.series[si];\n\n\tlet pt = placeDiv();\n\n\tpt.style.background = s.stroke || hexBlack;\n\n\tlet dia = ptDia(s.width, 1);\n\tlet mar = (dia - 1) / -2;\n\n\tsetStylePx(pt, WIDTH, dia);\n\tsetStylePx(pt, HEIGHT, dia);\n\tsetStylePx(pt, \"marginLeft\", mar);\n\tsetStylePx(pt, \"marginTop\", mar);\n\n\treturn pt;\n}\n\nconst cursorOpts = {\n\tshow: true,\n\tx: true,\n\ty: true,\n\tlock: false,\n\tpoints: {\n\t\tshow: cursorPoint,\n\t},\n\n\tdrag: {\n\t\tsetScale: true,\n\t\tx: true,\n\t\ty: false,\n\t\tdist: 0,\n\t\tuni: null,\n\t\t_x: false,\n\t\t_y: false,\n\t},\n\n\tfocus: {\n\t\tprox: -1,\n\t},\n\n\tlocked: false,\n\tleft: -10,\n\ttop: -10,\n\tidx: null,\n};\n\nconst grid = {\n\tshow: true,\n\tstroke: \"rgba(0,0,0,0.07)\",\n\twidth: 2,\n//\tdash: [],\n};\n\nconst ticks = assign({}, grid, {size: 10});\n\nconst font      = '12px -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"';\nconst labelFont = \"bold \" + font;\nconst lineMult = 1.5;\t\t// font-size multiplier\n\nconst xAxisOpts = {\n\ttype: \"x\",\n\tshow: true,\n\tscale: \"x\",\n\tspace: 50,\n\tgap: 5,\n\tsize: 50,\n\tlabelSize: 30,\n\tlabelFont,\n\tside: 2,\n//\tclass: \"x-vals\",\n//\tincrs: timeIncrs,\n//\tvalues: timeVals,\n\tgrid,\n\tticks,\n\tfont,\n\trotate: 0,\n};\n\nconst numSeriesLabel = \"Value\";\nconst timeSeriesLabel = \"Time\";\n\nconst xSeriesOpts = {\n\tshow: true,\n\tscale: \"x\",\n//\tlabel: \"Time\",\n//\tvalue: v => stamp(new Date(v * 1e3)),\n\n\t// internal caches\n\tmin: inf,\n\tmax: -inf,\n\tidxs: [],\n};\n\n// alternative: https://stackoverflow.com/a/2254896\nlet fmtNum = new Intl.NumberFormat(navigator.language);\n\nfunction numAxisVals(self, splits, space, incr) {\n\treturn splits.map(fmtNum.format);\n}\n\nfunction numAxisSplits(self, scaleMin, scaleMax, incr, pctSpace, forceMin) {\n\tscaleMin = forceMin ? scaleMin : +incrRoundUp(scaleMin, incr).toFixed(12);\n\n\tlet splits = [];\n\n\tfor (let val = scaleMin; val <= scaleMax; val = +(val + incr).toFixed(12))\n\t\tsplits.push(val);\n\n\treturn splits;\n}\n\nfunction numSeriesVal(self, val) {\n\treturn val;\n}\n\nconst yAxisOpts = {\n\ttype: \"y\",\n\tshow: true,\n\tscale: \"y\",\n\tspace: 40,\n\tgap: 5,\n\tsize: 50,\n\tlabelSize: 30,\n\tlabelFont,\n\tside: 3,\n//\tclass: \"y-vals\",\n//\tincrs: numIncrs,\n//\tvalues: (vals, space) => vals,\n\tgrid,\n\tticks,\n\tfont,\n\trotate: 0,\n};\n\n// takes stroke width\nfunction ptDia(width, mult) {\n\tlet dia = 3 + (width || 1) * 2;\n\treturn round3(dia * mult);\n}\n\nfunction seriesPoints(self, si) {\n\tconst dia = ptDia(self.series[si].width, pxRatio);\n\tlet maxPts = self.bbox.width / dia / 2;\n\tlet idxs = self.series[0].idxs;\n\treturn idxs[1] - idxs[0] <= maxPts;\n}\n\nconst ySeriesOpts = {\n//\ttype: \"n\",\n\tscale: \"y\",\n\tshow: true,\n\tband: false,\n\tspanGaps: false,\n\talpha: 1,\n\tpoints: {\n\t\tshow: seriesPoints,\n\t//\tstroke: \"#000\",\n\t//\tfill: \"#fff\",\n\t//\twidth: 1,\n\t//\tsize: 10,\n\t},\n//\tlabel: \"Value\",\n//\tvalue: v => v,\n\tvalues: null,\n\n\t// internal caches\n\tmin: inf,\n\tmax: -inf,\n\tidxs: [],\n\n\tpath: null,\n\tclip: null,\n};\n\nconst xScaleOpts = {\n\ttime: true,\n\tauto: false,\n\tdistr: 1,\n\tmin: null,\n\tmax: null,\n};\n\nconst yScaleOpts = assign({}, xScaleOpts, {\n\ttime: false,\n\tauto: true,\n});\n\nconst syncs = {};\n\nfunction _sync(opts) {\n\tlet clients = [];\n\n\treturn {\n\t\tsub(client) {\n\t\t\tclients.push(client);\n\t\t},\n\t\tunsub(client) {\n\t\t\tclients = clients.filter(c => c != client);\n\t\t},\n\t\tpub(type, self, x, y, w, h, i) {\n\t\t\tif (clients.length > 1) {\n\t\t\t\tclients.forEach(client => {\n\t\t\t\t\tclient != self && client.pub(type, self, x, y, w, h, i);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction setDefaults(d, xo, yo, initY) {\n\tlet d2 = initY ? [d[0], d[1]].concat(d.slice(2)) : [d[0]].concat(d.slice(1));\n\treturn d2.map((o, i) => setDefault(o, i, xo, yo));\n}\n\nfunction setDefault(o, i, xo, yo) {\n\treturn assign({}, (i == 0 || o && o.side % 2 == 0 ? xo : yo), o);\n}\n\nfunction getYPos(val, scale, hgt, top) {\n\tlet pctY = (val - scale.min) / (scale.max - scale.min);\n\treturn top + (1 - pctY) * hgt;\n}\n\nfunction getXPos(val, scale, wid, lft) {\n\tlet pctX = (val - scale.min) / (scale.max - scale.min);\n\treturn lft + pctX * wid;\n}\n\nfunction snapTimeX(self, dataMin, dataMax) {\n\treturn [dataMin, dataMax > dataMin ? dataMax : dataMax + 86400];\n}\n\nfunction snapNumX(self, dataMin, dataMax) {\n\tconst delta = dataMax - dataMin;\n\n\tif (delta == 0) {\n\t\tconst mag = log10(delta || abs(dataMax) || 1);\n\t\tconst exp = floor(mag) + 1;\n\t\treturn [dataMin, incrRoundUp(dataMax, pow(10, exp))];\n\t}\n\telse\n\t\treturn [dataMin, dataMax];\n}\n\n// this ensures that non-temporal/numeric y-axes get multiple-snapped padding added above/below\n// TODO: also account for incrs when snapping to ensure top of axis gets a tick & value\nfunction snapNumY(self, dataMin, dataMax) {\n\treturn rangeNum(dataMin, dataMax, 0.2, true);\n}\n\n// dim is logical (getClientBoundingRect) pixels, not canvas pixels\nfunction findIncr(valDelta, incrs, dim, minSpace) {\n\tlet pxPerUnit = dim / valDelta;\n\n\tfor (var i = 0; i < incrs.length; i++) {\n\t\tlet space = incrs[i] * pxPerUnit;\n\n\t\tif (space >= minSpace)\n\t\t\treturn [incrs[i], space];\n\t}\n}\n\nfunction filtMouse(e) {\n\treturn e.button == 0;\n}\n\nfunction pxRatioFont(font) {\n\tlet fontSize;\n\tfont = font.replace(/\\d+/, m => (fontSize = round(m * pxRatio)));\n\treturn [font, fontSize];\n}\n\nfunction uPlot(opts, data, then) {\n\tconst self = {};\n\n\tconst root = self.root = placeDiv(\"uplot\");\n\n\tif (opts.id != null)\n\t\troot.id = opts.id;\n\n\taddClass(root, opts.class);\n\n\tif (opts.title) {\n\t\tlet title = placeDiv(\"title\", root);\n\t\ttitle.textContent = opts.title;\n\t}\n\n\tconst can = placeTag(\"canvas\");\n\tconst ctx = self.ctx = can.getContext(\"2d\");\n\n\tconst wrap = placeDiv(\"wrap\", root);\n\tconst under = placeDiv(\"under\", wrap);\n\twrap.appendChild(can);\n\tconst over = placeDiv(\"over\", wrap);\n\n\topts = copy(opts);\n\n\t(opts.plugins || []).forEach(p => {\n\t\tif (p.opts)\n\t\t\topts = p.opts(self, opts) || opts;\n\t});\n\n\tlet ready = false;\n\n\tconst series  = self.series = setDefaults(opts.series || [], xSeriesOpts, ySeriesOpts, false);\n\tconst axes    = self.axes   = setDefaults(opts.axes   || [], xAxisOpts,   yAxisOpts,    true);\n\tconst scales  = self.scales = assign({}, {x: xScaleOpts, y: yScaleOpts}, opts.scales);\n\n\tconst gutters = assign({\n\t\tx: round(yAxisOpts.size / 2),\n\t\ty: round(xAxisOpts.size / 3),\n\t}, opts.gutters);\n\n//\tself.tz = opts.tz || Intl.DateTimeFormat().resolvedOptions().timeZone;\n\tconst _tzDate  =  (opts.tzDate || (ts => new Date(ts * 1e3)));\n\tconst _fmtDate =  (opts.fmtDate || fmtDate);\n\n\tconst _timeAxisSplits =  timeAxisSplits(_tzDate);\n\tconst _timeAxisVals   =  timeAxisVals(_tzDate, timeAxisStamps(_timeAxisStamps, _fmtDate));\n\tconst _timeSeriesVal  =  timeSeriesVal(_tzDate, timeSeriesStamp(_timeSeriesStamp, _fmtDate));\n\n\tconst pendScales = {};\n\n\t// explicitly-set initial scales\n\tfor (let k in scales) {\n\t\tlet sc = scales[k];\n\n\t\tif (sc.min != null || sc.max != null)\n\t\t\tpendScales[k] = {min: sc.min, max: sc.max};\n\t}\n\n\tconst legend     =  assign({show: true}, opts.legend);\n\tconst showLegend =  legend.show;\n\n\tlet legendEl;\n\tlet legendRows = [];\n\tlet legendCols;\n\tlet multiValLegend = false;\n\n\tif (showLegend) {\n\t\tlegendEl = placeTag(\"table\", \"legend\", root);\n\n\t\tconst getMultiVals = series[1] ? series[1].values : null;\n\t\tmultiValLegend = getMultiVals != null;\n\n\t\tif (multiValLegend) {\n\t\t\tlet head = placeTag(\"tr\", \"labels\", legendEl);\n\t\t\tplaceTag(\"th\", null, head);\n\t\t\tlegendCols = getMultiVals(self, 1, 0);\n\n\t\t\tfor (var key in legendCols)\n\t\t\t\tplaceTag(\"th\", null, head).textContent = key;\n\t\t}\n\t\telse {\n\t\t\tlegendCols = {_: 0};\n\t\t\taddClass(legendEl, \"inline\");\n\t\t}\n\t}\n\n\tfunction initLegendRow(s, i) {\n\t\tif (i == 0 && multiValLegend)\n\t\t\treturn null;\n\n\t\tlet _row = [];\n\n\t\tlet row = placeTag(\"tr\", \"series\", legendEl, legendEl.childNodes[i]);\n\n\t\taddClass(row, s.class);\n\n\t\tif (!s.show)\n\t\t\taddClass(row, \"off\");\n\n\t\tlet label = placeTag(\"th\", null, row);\n\n\t\tlet indic = placeDiv(\"ident\", label);\n\t\ts.width && (indic.style.borderColor = s.stroke);\n\t\tindic.style.backgroundColor = s.fill;\n\n\t\tlet text = placeDiv(\"text\", label);\n\t\ttext.textContent = s.label;\n\n\t\tif (i > 0) {\n\t\t\ton(\"click\", label, e => {\n\t\t\t\tif ( cursor.locked)\n\t\t\t\t\treturn;\n\n\t\t\t\tfiltMouse(e) && setSeries(series.indexOf(s), {show: !s.show},  syncOpts.setSeries);\n\t\t\t});\n\n\t\t\tif (cursorFocus) {\n\t\t\t\ton(mouseenter, label, e => {\n\t\t\t\t\tif (cursor.locked)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tsetSeries(series.indexOf(s), {focus: true}, syncOpts.setSeries);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfor (var key in legendCols) {\n\t\t\tlet v = placeTag(\"td\", null, row);\n\t\t\tv.textContent = \"--\";\n\t\t\t_row.push(v);\n\t\t}\n\n\t\treturn _row;\n\t}\n\n\tconst cursor =  (self.cursor = assign({}, cursorOpts, opts.cursor));\n\n\t (cursor.points.show = fnOrSelf(cursor.points.show));\n\n\tconst focus = self.focus = assign({}, opts.focus || {alpha: 0.3},  cursor.focus);\n\tconst cursorFocus =  focus.prox >= 0;\n\n\t// series-intersection markers\n\tlet cursorPts = [null];\n\n\tfunction initCursorPt(s, si) {\n\t\tif (si > 0) {\n\t\t\tlet pt = cursor.points.show(self, si);\n\n\t\t\tif (pt) {\n\t\t\t\taddClass(pt, \"cursor-pt\");\n\t\t\t\taddClass(pt, s.class);\n\t\t\t\ttrans(pt, -10, -10);\n\t\t\t\tover.insertBefore(pt, cursorPts[si]);\n\n\t\t\t\treturn pt;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction initSeries(s, i) {\n\t\t// init scales & defaults\n\t\tconst scKey = s.scale;\n\n\t\tconst sc = scales[scKey] = assign({}, (i == 0 ? xScaleOpts : yScaleOpts), scales[scKey]);\n\n\t\tlet isTime =  sc.time;\n\n\t\tsc.range = fnOrSelf(sc.range || (isTime ? snapTimeX : i == 0 ? snapNumX : snapNumY));\n\n\t\tlet sv = s.value;\n\t\ts.value = isTime ? (isStr(sv) ? timeSeriesVal(_tzDate, timeSeriesStamp(sv, _fmtDate)) : sv || _timeSeriesVal) : sv || numSeriesVal;\n\t\ts.label = s.label || (isTime ? timeSeriesLabel : numSeriesLabel);\n\n\t\tif (i > 0) {\n\t\t\ts.width = s.width == null ? 1 : s.width;\n\t\t\ts.paths = s.paths || ( buildPaths);\n\t\t\tlet _ptDia = ptDia(s.width, 1);\n\t\t\ts.points = assign({}, {\n\t\t\t\tsize: _ptDia,\n\t\t\t\twidth: max(1, _ptDia * .2),\n\t\t\t}, s.points);\n\t\t\ts.points.show = fnOrSelf(s.points.show);\n\t\t\ts._paths = null;\n\t\t}\n\n\t\tif (showLegend)\n\t\t\tlegendRows.splice(i, 0, initLegendRow(s, i));\n\n\t\tif ( cursor.show) {\n\t\t\tlet pt = initCursorPt(s, i);\n\t\t\tpt && cursorPts.splice(i, 0, pt);\n\t\t}\n\t}\n\n\tfunction addSeries(opts, si) {\n\t\tsi = si == null ? series.length : si;\n\n\t\topts = setDefault(opts, si, xSeriesOpts, ySeriesOpts);\n\t\tseries.splice(si, 0, opts);\n\t\tinitSeries(series[si], si);\n\t}\n\n\tself.addSeries = addSeries;\n\n\tfunction delSeries(i) {\n\t\tseries.splice(i, 1);\n\t\t showLegend && legendRows.splice(i, 1)[0][0].parentNode.remove();\n\t\t cursorPts.length > 1 && cursorPts.splice(i, 1)[0].remove();\n\n\t\t// TODO: de-init no-longer-needed scales?\n\t}\n\n\tself.delSeries = delSeries;\n\n\tseries.forEach(initSeries);\n\n\t// dependent scales inherit\n\tfor (let k in scales) {\n\t\tlet sc = scales[k];\n\n\t\tif (sc.from != null)\n\t\t\tscales[k] = assign({}, scales[sc.from], sc);\n\t}\n\n\tconst xScaleKey = series[0].scale;\n\tconst xScaleDistr = scales[xScaleKey].distr;\n\n\tfunction initAxis(axis, i) {\n\t\tif (axis.show) {\n\t\t\tlet isVt = axis.side % 2;\n\n\t\t\tlet sc = scales[axis.scale];\n\n\t\t\t// this can occur if all series specify non-default scales\n\t\t\tif (sc == null) {\n\t\t\t\taxis.scale = isVt ? series[1].scale : xScaleKey;\n\t\t\t\tsc = scales[axis.scale];\n\t\t\t}\n\n\t\t\t// also set defaults for incrs & values based on axis distr\n\t\t\tlet isTime =  sc.time;\n\n\t\t\taxis.space = fnOrSelf(axis.space);\n\t\t\taxis.rotate = fnOrSelf(axis.rotate);\n\t\t\taxis.incrs = fnOrSelf(axis.incrs || (          sc.distr == 2 ? intIncrs : (isTime ? timeIncrs : numIncrs)));\n\t\t\taxis.split = fnOrSelf(axis.split || (isTime && sc.distr == 1 ? _timeAxisSplits : numAxisSplits));\n\t\t\tlet av = axis.values;\n\t\t\taxis.values = isTime ? (isArr(av) ? timeAxisVals(_tzDate, timeAxisStamps(av, _fmtDate)) : av || _timeAxisVals) : av || numAxisVals;\n\n\t\t\taxis.font      = pxRatioFont(axis.font);\n\t\t\taxis.labelFont = pxRatioFont(axis.labelFont);\n\t\t}\n\t}\n\n\t// set axis defaults\n\taxes.forEach(initAxis);\n\n\tlet dataLen;\n\n\t// rendered data window\n\tlet i0 = null;\n\tlet i1 = null;\n\tconst idxs = series[0].idxs;\n\n\tlet data0 = null;\n\n\tfunction setData(_data, _resetScales) {\n\t\t_data = _data || [];\n\t\t_data[0] = _data[0] || [];\n\n\t\tself.data = _data;\n\t\tdata = _data.slice();\n\t\tdata0 = data[0];\n\t\tdataLen = data0.length;\n\n\t\tif (xScaleDistr == 2)\n\t\t\tdata[0] = data0.map((v, i) => i);\n\n\t\tresetYSeries();\n\n\t\tfire(\"setData\");\n\n\t\t_resetScales !== false && autoScaleX();\n\t}\n\n\tself.setData = setData;\n\n\tfunction autoScaleX() {\n\t\ti0 = idxs[0] = 0;\n\t\ti1 = idxs[1] = dataLen - 1;\n\n\t\tlet _min = xScaleDistr == 2 ? i0 : data[0][i0],\n\t\t\t_max = xScaleDistr == 2 ? i1 : data[0][i1];\n\n\t\t_setScale(xScaleKey, _min, _max);\n\t}\n\n\tfunction setCtxStyle(stroke, width, dash, fill) {\n\t\tctx.strokeStyle = stroke || hexBlack;\n\t\tctx.lineWidth = width;\n\t\tctx.lineJoin = \"round\";\n\t\tctx.setLineDash(dash || []);\n\t\tctx.fillStyle = fill || hexBlack;\n\t}\n\n\tlet fullWidCss;\n\tlet fullHgtCss;\n\n\tlet plotWidCss;\n\tlet plotHgtCss;\n\n\t// plot margins to account for axes\n\tlet plotLftCss;\n\tlet plotTopCss;\n\n\tlet plotLft;\n\tlet plotTop;\n\tlet plotWid;\n\tlet plotHgt;\n\n\tself.bbox = {};\n\n\tfunction _setSize(width, height) {\n\t\tself.width  = fullWidCss = plotWidCss = width;\n\t\tself.height = fullHgtCss = plotHgtCss = height;\n\t\tplotLftCss  = plotTopCss = 0;\n\n\t\tcalcPlotRect();\n\t\tcalcAxesRects();\n\n\t\tlet bb = self.bbox;\n\n\t\tplotLft = bb[LEFT]   = incrRound(plotLftCss * pxRatio, 0.5);\n\t\tplotTop = bb[TOP]    = incrRound(plotTopCss * pxRatio, 0.5);\n\t\tplotWid = bb[WIDTH]  = incrRound(plotWidCss * pxRatio, 0.5);\n\t\tplotHgt = bb[HEIGHT] = incrRound(plotHgtCss * pxRatio, 0.5);\n\n\t\tsetStylePx(under, LEFT,   plotLftCss);\n\t\tsetStylePx(under, TOP,    plotTopCss);\n\t\tsetStylePx(under, WIDTH,  plotWidCss);\n\t\tsetStylePx(under, HEIGHT, plotHgtCss);\n\n\t\tsetStylePx(over, LEFT,    plotLftCss);\n\t\tsetStylePx(over, TOP,     plotTopCss);\n\t\tsetStylePx(over, WIDTH,   plotWidCss);\n\t\tsetStylePx(over, HEIGHT,  plotHgtCss);\n\n\t\tsetStylePx(wrap, WIDTH,   fullWidCss);\n\t\tsetStylePx(wrap, HEIGHT,  fullHgtCss);\n\n\t\tcan[WIDTH]  = round(fullWidCss * pxRatio);\n\t\tcan[HEIGHT] = round(fullHgtCss * pxRatio);\n\n\t\tsyncRect();\n\n\t\tready && _setScale(xScaleKey, scales[xScaleKey].min, scales[xScaleKey].max);\n\n\t\tready && fire(\"setSize\");\n\t}\n\n\tfunction setSize({width, height}) {\n\t\t_setSize(width, height);\n\t}\n\n\tself.setSize = setSize;\n\n\t// accumulate axis offsets, reduce canvas width\n\tfunction calcPlotRect() {\n\t\t// easements for edge labels\n\t\tlet hasTopAxis = false;\n\t\tlet hasBtmAxis = false;\n\t\tlet hasRgtAxis = false;\n\t\tlet hasLftAxis = false;\n\n\t\taxes.forEach((axis, i) => {\n\t\t\tif (axis.show) {\n\t\t\t\tlet {side, size} = axis;\n\t\t\t\tlet isVt = side % 2;\n\t\t\t\tlet labelSize = axis.labelSize = (axis.label != null ? (axis.labelSize || 30) : 0);\n\n\t\t\t\tlet fullSize = size + labelSize;\n\n\t\t\t\tif (fullSize > 0) {\n\t\t\t\t\tif (isVt) {\n\t\t\t\t\t\tplotWidCss -= fullSize;\n\n\t\t\t\t\t\tif (side == 3) {\n\t\t\t\t\t\t\tplotLftCss += fullSize;\n\t\t\t\t\t\t\thasLftAxis = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\thasRgtAxis = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tplotHgtCss -= fullSize;\n\n\t\t\t\t\t\tif (side == 0) {\n\t\t\t\t\t\t\tplotTopCss += fullSize;\n\t\t\t\t\t\t\thasTopAxis = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\thasBtmAxis = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// hz gutters\n\t\tif (hasTopAxis || hasBtmAxis) {\n\t\t\tif (!hasRgtAxis)\n\t\t\t\tplotWidCss -= gutters.x;\n\t\t\tif (!hasLftAxis) {\n\t\t\t\tplotWidCss -= gutters.x;\n\t\t\t\tplotLftCss += gutters.x;\n\t\t\t}\n\t\t}\n\n\t\t// vt gutters\n\t\tif (hasLftAxis || hasRgtAxis) {\n\t\t\tif (!hasBtmAxis)\n\t\t\t\tplotHgtCss -= gutters.y;\n\t\t\tif (!hasTopAxis) {\n\t\t\t\tplotHgtCss -= gutters.y;\n\t\t\t\tplotTopCss += gutters.y;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction calcAxesRects() {\n\t\t// will accum +\n\t\tlet off1 = plotLftCss + plotWidCss;\n\t\tlet off2 = plotTopCss + plotHgtCss;\n\t\t// will accum -\n\t\tlet off3 = plotLftCss;\n\t\tlet off0 = plotTopCss;\n\n\t\tfunction incrOffset(side, size) {\n\n\t\t\tswitch (side) {\n\t\t\t\tcase 1: off1 += size; return off1 - size;\n\t\t\t\tcase 2: off2 += size; return off2 - size;\n\t\t\t\tcase 3: off3 -= size; return off3 + size;\n\t\t\t\tcase 0: off0 -= size; return off0 + size;\n\t\t\t}\n\t\t}\n\n\t\taxes.forEach((axis, i) => {\n\t\t\tlet side = axis.side;\n\n\t\t\taxis._pos = incrOffset(side, axis.size);\n\n\t\t\tif (axis.label != null)\n\t\t\t\taxis._lpos = incrOffset(side, axis.labelSize);\n\t\t});\n\t}\n\n\tfunction setScales() {\n\t\tif (inBatch) {\n\t\t\tshouldSetScales = true;\n\t\t\treturn;\n\t\t}\n\n\t//\tlog(\"setScales()\", arguments);\n\n\t\tif (dataLen > 0) {\n\t\t\t// wip scales\n\t\t\tlet wipScales = copy(scales);\n\n\t\t\tfor (let k in wipScales) {\n\t\t\t\tlet wsc = wipScales[k];\n\t\t\t\tlet psc = pendScales[k];\n\n\t\t\t\tif (psc != null) {\n\t\t\t\t\tassign(wsc, psc);\n\n\t\t\t\t\t// explicitly setting the x-scale invalidates everything (acts as redraw)\n\t\t\t\t\tif (k == xScaleKey)\n\t\t\t\t\t\tresetYSeries();\n\t\t\t\t}\n\t\t\t\telse if (k != xScaleKey) {\n\t\t\t\t\twsc.min = inf;\n\t\t\t\t\twsc.max = -inf;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// pre-range y-scales from y series' data values\n\t\t\tseries.forEach((s, i) => {\n\t\t\t\tlet k = s.scale;\n\t\t\t\tlet wsc = wipScales[k];\n\n\t\t\t\t// setting the x scale invalidates everything\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tlet minMax = wsc.range(self, wsc.min, wsc.max);\n\n\t\t\t\t\twsc.min = minMax[0];\n\t\t\t\t\twsc.max = minMax[1];\n\n\t\t\t\t\ti0 = closestIdx(wsc.min, data[0]);\n\t\t\t\t\ti1 = closestIdx(wsc.max, data[0]);\n\n\t\t\t\t\t// closest indices can be outside of view\n\t\t\t\t\tif (data[0][i0] < wsc.min)\n\t\t\t\t\t\ti0++;\n\t\t\t\t\tif (data[0][i1] > wsc.max)\n\t\t\t\t\t\ti1--;\n\n\t\t\t\t\ts.min = data0[i0];\n\t\t\t\t\ts.max = data0[i1];\n\t\t\t\t}\n\t\t\t\telse if (s.show && pendScales[k] == null) {\n\t\t\t\t\t// only run getMinMax() for invalidated series data, else reuse\n\t\t\t\t\tlet minMax = s.min == inf ? (wsc.auto ? getMinMax(data[i], i0, i1) : [0,100]) : [s.min, s.max];\n\n\t\t\t\t\t// initial min/max\n\t\t\t\t\twsc.min = min(wsc.min, s.min = minMax[0]);\n\t\t\t\t\twsc.max = max(wsc.max, s.max = minMax[1]);\n\t\t\t\t}\n\n\t\t\t\ts.idxs[0] = i0;\n\t\t\t\ts.idxs[1] = i1;\n\t\t\t});\n\n\t\t\t// range independent scales\n\t\t\tfor (let k in wipScales) {\n\t\t\t\tlet wsc = wipScales[k];\n\n\t\t\t\tif (wsc.from == null && wsc.min != inf && pendScales[k] == null) {\n\t\t\t\t\tlet minMax = wsc.range(self, wsc.min, wsc.max);\n\t\t\t\t\twsc.min = minMax[0];\n\t\t\t\t\twsc.max = minMax[1];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// range dependent scales\n\t\t\tfor (let k in wipScales) {\n\t\t\t\tlet wsc = wipScales[k];\n\n\t\t\t\tif (wsc.from != null) {\n\t\t\t\t\tlet base = wipScales[wsc.from];\n\n\t\t\t\t\tif (base.min != inf) {\n\t\t\t\t\t\tlet minMax = wsc.range(self, base.min, base.max);\n\t\t\t\t\t\twsc.min = minMax[0];\n\t\t\t\t\t\twsc.max = minMax[1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet changed = {};\n\n\t\t\tfor (let k in wipScales) {\n\t\t\t\tlet wsc = wipScales[k];\n\t\t\t\tlet sc = scales[k];\n\n\t\t\t\tif (sc.min != wsc.min || sc.max != wsc.max) {\n\t\t\t\t\tsc.min = wsc.min;\n\t\t\t\t\tsc.max = wsc.max;\n\t\t\t\t\tchanged[k] = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// invalidate paths of all series on changed scales\n\t\t\tseries.forEach(s => {\n\t\t\t\tif (changed[s.scale])\n\t\t\t\t\ts._paths = null;\n\t\t\t});\n\n\t\t\tfor (let k in changed)\n\t\t\t\tfire(\"setScale\", k);\n\t\t}\n\n\t\tfor (let k in pendScales)\n\t\t\tpendScales[k] = null;\n\n\t\t cursor.show && updateCursor();\n\t}\n\n\t// TODO: drawWrap(si, drawPoints) (save, restore, translate, clip)\n\n\tfunction drawPoints(si) {\n\t//\tlog(\"drawPoints()\", arguments);\n\n\t\tlet s = series[si];\n\t\tlet p = s.points;\n\n\t\tconst width = round3(p.width * pxRatio);\n\t\tconst offset = (width % 2) / 2;\n\t\tconst isStroked = p.width > 0;\n\n\t\tlet rad = (p.size - p.width) / 2 * pxRatio;\n\t\tlet dia = round3(rad * 2);\n\n\t\tctx.translate(offset, offset);\n\n\t\tctx.save();\n\n\t\tctx.beginPath();\n\t\tctx.rect(\n\t\t\tplotLft - dia,\n\t\t\tplotTop - dia,\n\t\t\tplotWid + dia * 2,\n\t\t\tplotHgt + dia * 2,\n\t\t);\n\t\tctx.clip();\n\n\t\tctx.globalAlpha = s.alpha;\n\n\t\tconst path = new Path2D();\n\n\t\tfor (let pi = i0; pi <= i1; pi++) {\n\t\t\tif (data[si][pi] != null) {\n\t\t\t\tlet x = round(getXPos(data[0][pi],  scales[xScaleKey], plotWid, plotLft));\n\t\t\t\tlet y = round(getYPos(data[si][pi], scales[s.scale],   plotHgt, plotTop));\n\n\t\t\t\tpath.moveTo(x + rad, y);\n\t\t\t\tpath.arc(x, y, rad, 0, PI * 2);\n\t\t\t}\n\t\t}\n\n\t\tsetCtxStyle(\n\t\t\tp.stroke || s.stroke || hexBlack,\n\t\t\twidth,\n\t\t\tnull,\n\t\t\tp.fill || (isStroked ? \"#fff\" : s.stroke || hexBlack),\n\t\t);\n\n\t\tctx.fill(path);\n\t\tisStroked && ctx.stroke(path);\n\n\t\tctx.globalAlpha = 1;\n\n\t\tctx.restore();\n\n\t\tctx.translate(-offset, -offset);\n\t}\n\n\t// grabs the nearest indices with y data outside of x-scale limits\n\tfunction getOuterIdxs(ydata) {\n\t\tlet _i0 = clamp(i0 - 1, 0, dataLen - 1);\n\t\tlet _i1 = clamp(i1 + 1, 0, dataLen - 1);\n\n\t\twhile (ydata[_i0] == null && _i0 > 0)\n\t\t\t_i0--;\n\n\t\twhile (ydata[_i1] == null && _i1 < dataLen - 1)\n\t\t\t_i1++;\n\n\t\treturn [_i0, _i1];\n\t}\n\n\tlet dir = 1;\n\n\tfunction drawSeries() {\n\t\t// path building loop must be before draw loop to ensure that all bands are fully constructed\n\t\tseries.forEach((s, i) => {\n\t\t\tif (i > 0 && s.show && dataLen > 0 && s._paths == null) {\n\t\t\t\tlet _idxs = getOuterIdxs(data[i]);\n\t\t\t\ts._paths = s.paths(self, i, _idxs[0], _idxs[1]);\n\t\t\t}\n\t\t});\n\n\t\tseries.forEach((s, i) => {\n\t\t\tif (i > 0 && s.show) {\n\t\t\t\tif (s._paths)\n\t\t\t\t\t drawPath(i);\n\n\t\t\t\tif (s.points.show(self, i, i0, i1))\n\t\t\t\t\t drawPoints(i);\n\n\t\t\t\tfire(\"drawSeries\", i);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction drawPath(si) {\n\t\tconst s = series[si];\n\n\t\tif (dir == 1) {\n\t\t\tconst { stroke, fill, clip } = s._paths;\n\t\t\tconst width = round3(s[WIDTH] * pxRatio);\n\t\t\tconst offset = (width % 2) / 2;\n\n\t\t\tsetCtxStyle(s.stroke, width, s.dash, s.fill);\n\n\t\t\tctx.globalAlpha = s.alpha;\n\n\t\t\tctx.translate(offset, offset);\n\n\t\t\tctx.save();\n\n\t\t\tlet lft = plotLft,\n\t\t\t\ttop = plotTop,\n\t\t\t\twid = plotWid,\n\t\t\t\thgt = plotHgt;\n\n\t\t\tlet halfWid = width * pxRatio / 2;\n\n\t\t\tif (s.min == 0)\n\t\t\t\thgt += halfWid;\n\n\t\t\tif (s.max == 0) {\n\t\t\t\ttop -= halfWid;\n\t\t\t\thgt += halfWid;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tctx.rect(lft, top, wid, hgt);\n\t\t\tctx.clip();\n\n\t\t\tif (clip != null)\n\t\t\t\tctx.clip(clip);\n\n\t\t\tif (s.band) {\n\t\t\t\tctx.fill(stroke);\n\t\t\t\twidth && ctx.stroke(stroke);\n\t\t\t}\n\t\t\telse {\n\t\t\t\twidth && ctx.stroke(stroke);\n\n\t\t\t\tif (s.fill != null)\n\t\t\t\t\tctx.fill(fill);\n\t\t\t}\n\n\t\t\tctx.restore();\n\n\t\t\tctx.translate(-offset, -offset);\n\n\t\t\tctx.globalAlpha = 1;\n\t\t}\n\n\t\tif (s.band)\n\t\t\tdir *= -1;\n\t}\n\n\tfunction buildClip(is, gaps, nullHead, nullTail) {\n\t\tlet s = series[is];\n\n\t\tlet clip = null;\n\n\t\t// create clip path (invert gaps and non-gaps)\n\t\tif (gaps.length > 0) {\n\t\t\tif (s.spanGaps) {\n\t\t\t\tlet headGap = gaps[0];\n\t\t\t\tlet tailGap = gaps[gaps.length - 1];\n\t\t\t\tgaps = [];\n\n\t\t\t\tif (nullHead)\n\t\t\t\t\tgaps.push(headGap);\n\t\t\t\tif (nullTail)\n\t\t\t\t\tgaps.push(tailGap);\n\t\t\t}\n\n\t\t\tclip = new Path2D();\n\n\t\t\tlet prevGapEnd = plotLft;\n\n\t\t\tfor (let i = 0; i < gaps.length; i++) {\n\t\t\t\tlet g = gaps[i];\n\n\t\t\t\tclip.rect(prevGapEnd, plotTop, g[0] - prevGapEnd, plotTop + plotHgt);\n\n\t\t\t\tprevGapEnd = g[1];\n\t\t\t}\n\n\t\t\tclip.rect(prevGapEnd, plotTop, plotLft + plotWid - prevGapEnd, plotTop + plotHgt);\n\t\t}\n\n\t\treturn clip;\n\t}\n\n\tfunction addGap(gaps, outX, x) {\n\t\tlet prevGap = gaps[gaps.length - 1];\n\n\t\tif (prevGap && prevGap[0] == outX)\t\t\t// TODO: gaps must be encoded at stroke widths?\n\t\t\tprevGap[1] = x;\n\t\telse\n\t\t\tgaps.push([outX, x]);\n\t}\n\n\tfunction buildPaths(self, is, _i0, _i1) {\n\t\tconst s = series[is];\n\n\t\tconst xdata  = data[0];\n\t\tconst ydata  = data[is];\n\t\tconst scaleX = scales[xScaleKey];\n\t\tconst scaleY = scales[s.scale];\n\n\t\tconst _paths = dir == 1 ? {stroke: new Path2D(), fill: null, clip: null} : series[is-1]._paths;\n\t\tconst stroke = _paths.stroke;\n\t\tconst width = round3(s[WIDTH] * pxRatio);\n\n\t\tlet minY = inf,\n\t\t\tmaxY = -inf,\n\t\t\toutY, outX;\n\n\t\t// todo: don't build gaps on dir = -1 pass\n\t\tlet gaps = [];\n\n\t\tlet accX = round(getXPos(xdata[dir == 1 ? _i0 : _i1], scaleX, plotWid, plotLft));\n\n\t\t// the moves the shape edge outside the canvas so stroke doesnt bleed in\n\t\tif (s.band && dir == 1 && _i0 == i0) {\n\t\t\tif (width)\n\t\t\t\tstroke.lineTo(-width, round(getYPos(ydata[_i0], scaleY, plotHgt, plotTop)));\n\n\t\t\tif (scaleX.min < xdata[0])\n\t\t\t\tgaps.push([plotLft, accX - 1]);\n\t\t}\n\n\t\tfor (let i = dir == 1 ? _i0 : _i1; i >= _i0 && i <= _i1; i += dir) {\n\t\t\tlet x = round(getXPos(xdata[i], scaleX, plotWid, plotLft));\n\n\t\t\tif (x == accX) {\n\t\t\t\tif (ydata[i] != null) {\n\t\t\t\t\toutY = round(getYPos(ydata[i], scaleY, plotHgt, plotTop));\n\t\t\t\t\tminY = min(outY, minY);\n\t\t\t\t\tmaxY = max(outY, maxY);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet _addGap = false;\n\n\t\t\t\tif (minY != inf) {\n\t\t\t\t\tstroke.lineTo(accX, minY);\n\t\t\t\t\tstroke.lineTo(accX, maxY);\n\t\t\t\t\tstroke.lineTo(accX, outY);\n\t\t\t\t\toutX = accX;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\t_addGap = true;\n\n\t\t\t\tif (ydata[i] != null) {\n\t\t\t\t\toutY = round(getYPos(ydata[i], scaleY, plotHgt, plotTop));\n\t\t\t\t\tstroke.lineTo(x, outY);\n\t\t\t\t\tminY = maxY = outY;\n\n\t\t\t\t\t// prior pixel can have data but still start a gap if ends with null\n\t\t\t\t\tif (x - accX > 1 && ydata[i-1] == null)\n\t\t\t\t\t\t_addGap = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tminY = inf;\n\t\t\t\t\tmaxY = -inf;\n\t\t\t\t}\n\n\t\t\t\t_addGap && addGap(gaps, outX, x);\n\n\t\t\t\taccX = x;\n\t\t\t}\n\t\t}\n\n\t\t// extend or insert rightmost gap if no data exists to the right\n\t\tif (ydata[_i1] == null)\n\t\t\taddGap(gaps, outX, accX);\n\n\t\tif (s.band) {\n\t\t\tlet overShoot = width * 100, _iy, _x;\n\n\t\t\t// the moves the shape edge outside the canvas so stroke doesnt bleed in\n\t\t\tif (dir == -1 && _i0 == i0) {\n\t\t\t\t_x = plotLft - overShoot;\n\t\t\t\t_iy = _i0;\n\t\t\t}\n\n\t\t\tif (dir == 1 && _i1 == i1) {\n\t\t\t\t_x = plotLft + plotWid + overShoot;\n\t\t\t\t_iy = _i1;\n\n\t\t\t\tif (scaleX.max > xdata[dataLen - 1])\n\t\t\t\t\tgaps.push([accX, plotLft + plotWid]);\n\t\t\t}\n\n\t\t\tstroke.lineTo(_x, round(getYPos(ydata[_iy], scaleY, plotHgt, plotTop)));\n\t\t}\n\n\t\tif (dir == 1) {\n\t\t\t_paths.clip = buildClip(is, gaps, ydata[_i0] == null, ydata[_i1] == null);\n\n\t\t\tif (s.fill != null) {\n\t\t\t\tlet fill = _paths.fill = new Path2D(stroke);\n\n\t\t\t\tlet zeroY = round(getYPos(0, scaleY, plotHgt, plotTop));\n\t\t\t\tfill.lineTo(plotLft + plotWid, zeroY);\n\t\t\t\tfill.lineTo(plotLft, zeroY);\n\t\t\t}\n\t\t}\n\n\t\tif (s.band)\n\t\t\tdir *= -1;\n\n\t\treturn _paths;\n\t}\n\n\tfunction getIncrSpace(axis, min, max, fullDim) {\n\t\tlet incrSpace;\n\n\t\tif (fullDim <= 0)\n\t\t\tincrSpace = [0, 0];\n\t\telse {\n\t\t\tlet minSpace = axis.space(self, min, max, fullDim);\n\t\t\tlet incrs = axis.incrs(self, min, max, fullDim, minSpace);\n\t\t\tincrSpace = findIncr(max - min, incrs, fullDim, minSpace);\n\t\t\tincrSpace.push(incrSpace[1]/minSpace);\n\t\t}\n\n\t\treturn incrSpace;\n\t}\n\n\tfunction drawOrthoLines(offs, ori, side, pos0, len, width, stroke, dash) {\n\t\tlet offset = (width % 2) / 2;\n\n\t\tctx.translate(offset, offset);\n\n\t\tsetCtxStyle(stroke, width, dash);\n\n\t\tctx.beginPath();\n\n\t\tlet x0, y0, x1, y1, pos1 = pos0 + (side == 0 || side == 3 ? -len : len);\n\n\t\tif (ori == 0) {\n\t\t\ty0 = pos0;\n\t\t\ty1 = pos1;\n\t\t}\n\t\telse {\n\t\t\tx0 = pos0;\n\t\t\tx1 = pos1;\n\t\t}\n\n\t\toffs.forEach((off, i) => {\n\t\t\tif (ori == 0)\n\t\t\t\tx0 = x1 = off;\n\t\t\telse\n\t\t\t\ty0 = y1 = off;\n\n\t\t\tctx.moveTo(x0, y0);\n\t\t\tctx.lineTo(x1, y1);\n\t\t});\n\n\t\tctx.stroke();\n\n\t\tctx.translate(-offset, -offset);\n\t}\n\n\tfunction drawAxesGrid() {\n\t\taxes.forEach((axis, i) => {\n\t\t\tif (!axis.show)\n\t\t\t\treturn;\n\n\t\t\tlet scale = scales[axis.scale];\n\n\t\t\t// this will happen if all series using a specific scale are toggled off\n\t\t\tif (scale.min == inf)\n\t\t\t\treturn;\n\n\t\t\tlet side = axis.side;\n\t\t\tlet ori = side % 2;\n\n\t\t\tlet {min, max} = scale;\n\n\t\t\tlet [incr, space, pctSpace] = getIncrSpace(axis, min, max, ori == 0 ? plotWidCss : plotHgtCss);\n\n\t\t\t// if we're using index positions, force first tick to match passed index\n\t\t\tlet forceMin = scale.distr == 2;\n\n\t\t\tlet splits = axis.split(self, min, max, incr, pctSpace, forceMin);\n\n\t\t\tlet getPos  = ori == 0 ? getXPos : getYPos;\n\t\t\tlet plotDim = ori == 0 ? plotWid : plotHgt;\n\t\t\tlet plotOff = ori == 0 ? plotLft : plotTop;\n\n\t\t\tlet canOffs = splits.map(val => round(getPos(val, scale, plotDim, plotOff)));\n\n\t\t\tlet axisGap  = round(axis.gap * pxRatio);\n\n\t\t\tlet ticks = axis.ticks;\n\t\t\tlet tickSize = ticks.show ? round(ticks.size * pxRatio) : 0;\n\n\t\t\t// tick labels\n\t\t\t// BOO this assumes a specific data/series\n\t\t\tlet values = axis.values(\n\t\t\t\tself,\n\t\t\t\tscale.distr == 2 ? splits.map(i => data0[i]) : splits,\n\t\t\t\tspace,\n\t\t\t\tscale.distr == 2 ? data0[splits[1]] -  data0[splits[0]] : incr,\n\t\t\t);\n\n\t\t\t// rotating of labels only supported on bottom x axis\n\t\t\tlet angle = side == 2 ? axis.rotate(self, values, space) * -PI/180 : 0;\n\n\t\t\tlet basePos  = round(axis._pos * pxRatio);\n\t\t\tlet shiftAmt = tickSize + axisGap;\n\t\t\tlet shiftDir = ori == 0 && side == 0 || ori == 1 && side == 3 ? -1 : 1;\n\t\t\tlet finalPos = basePos + shiftAmt * shiftDir;\n\t\t\tlet y        = ori == 0 ? finalPos : 0;\n\t\t\tlet x        = ori == 1 ? finalPos : 0;\n\n\t\t\tctx.font         = axis.font[0];\n\t\t\tctx.fillStyle    = axis.stroke || hexBlack;\t\t\t\t\t\t\t\t\t// rgba?\n\t\t\tctx.textAlign    = angle > 0 ? LEFT :\n\t\t\t                   angle < 0 ? RIGHT :\n\t\t\t                   ori == 0 ? \"center\" : side == 3 ? RIGHT : LEFT;\n\t\t\tctx.textBaseline = angle ||\n\t\t\t                   ori == 1 ? \"middle\" : side == 2 ? TOP   : BOTTOM;\n\n\t\t\tlet lineHeight   = axis.font[1] * lineMult;\n\n\t\t\tvalues.forEach((val, i) => {\n\t\t\t\tif (ori == 0)\n\t\t\t\t\tx = canOffs[i];\n\t\t\t\telse\n\t\t\t\t\ty = canOffs[i];\n\n\t\t\t\t(\"\"+val).split(/\\n/gm).forEach((text, j) => {\n\t\t\t\t\tif (angle) {\n\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\tctx.translate(x, y + j * lineHeight);\n\t\t\t\t\t\tctx.rotate(angle);\n\t\t\t\t\t\tctx.fillText(text, 0, 0);\n\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tctx.fillText(text, x, y + j * lineHeight);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// axis label\n\t\t\tif (axis.label) {\n\t\t\t\tctx.save();\n\n\t\t\t\tlet baseLpos = round(axis._lpos * pxRatio);\n\n\t\t\t\tif (ori == 1) {\n\t\t\t\t\tx = y = 0;\n\n\t\t\t\t\tctx.translate(\n\t\t\t\t\t\tbaseLpos,\n\t\t\t\t\t\tround(plotTop + plotHgt / 2),\n\t\t\t\t\t);\n\t\t\t\t\tctx.rotate((side == 3 ? -PI : PI) / 2);\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx = round(plotLft + plotWid / 2);\n\t\t\t\t\ty = baseLpos;\n\t\t\t\t}\n\n\t\t\t\tctx.font         = axis.labelFont[0];\n\t\t\t//\tctx.fillStyle    = axis.labelStroke || hexBlack;\t\t\t\t\t\t// rgba?\n\t\t\t\tctx.textAlign    = \"center\";\n\t\t\t\tctx.textBaseline = side == 2 ? TOP : BOTTOM;\n\n\t\t\t\tctx.fillText(axis.label, x, y);\n\n\t\t\t\tctx.restore();\n\t\t\t}\n\n\t\t\t// ticks\n\t\t\tif (ticks.show) {\n\t\t\t\tdrawOrthoLines(\n\t\t\t\t\tcanOffs,\n\t\t\t\t\tori,\n\t\t\t\t\tside,\n\t\t\t\t\tbasePos,\n\t\t\t\t\ttickSize,\n\t\t\t\t\tround3(ticks[WIDTH] * pxRatio),\n\t\t\t\t\tticks.stroke,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// grid\n\t\t\tlet grid = axis.grid;\n\n\t\t\tif (grid.show) {\n\t\t\t\tdrawOrthoLines(\n\t\t\t\t\tcanOffs,\n\t\t\t\t\tori,\n\t\t\t\t\tori == 0 ? 2 : 1,\n\t\t\t\t\tori == 0 ? plotTop : plotLft,\n\t\t\t\t\tori == 0 ? plotHgt : plotWid,\n\t\t\t\t\tround3(grid[WIDTH] * pxRatio),\n\t\t\t\t\tgrid.stroke,\n\t\t\t\t\tgrid.dash,\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\tfire(\"drawAxes\");\n\t}\n\n\tfunction resetYSeries() {\n\t//\tlog(\"resetYSeries()\", arguments);\n\n\t\tseries.forEach((s, i) => {\n\t\t\tif (i > 0) {\n\t\t\t\ts.min = inf;\n\t\t\t\ts.max = -inf;\n\t\t\t\ts._paths = null;\n\t\t\t}\n\t\t});\n\t}\n\n\tlet didPaint;\n\n\tfunction paint() {\n\t\tif (inBatch) {\n\t\t\tshouldPaint = true;\n\t\t\treturn;\n\t\t}\n\n\t//\tlog(\"paint()\", arguments);\n\n\t\tctx.clearRect(0, 0, can[WIDTH], can[HEIGHT]);\n\t\tfire(\"drawClear\");\n\t\tdrawAxesGrid();\n\t\tdrawSeries();\n\t\tdidPaint = true;\n\t\tfire(\"draw\");\n\t}\n\n\tself.redraw = rebuildPaths => {\n\t\tif (rebuildPaths !== false)\n\t\t\t_setScale(xScaleKey, scales[xScaleKey].min, scales[xScaleKey].max);\n\t\telse\n\t\t\tpaint();\n\t};\n\n\t// redraw() => setScale('x', scales.x.min, scales.x.max);\n\n\t// explicit, never re-ranged (is this actually true? for x and y)\n\tfunction setScale(key, opts) {\n\t\tlet sc = scales[key];\n\n\t\tif (sc.from == null) {\n\t\t\tif (key == xScaleKey) {\n\t\t\t\tif (sc.distr == 2) {\n\t\t\t\t\topts.min = closestIdx(opts.min, data[0]);\n\t\t\t\t\topts.max = closestIdx(opts.max, data[0]);\n\t\t\t\t}\n\n\t\t\t\t// prevent setting a temporal x scale too small since Date objects cannot advance ticks smaller than 1ms\n\t\t\t\tif ( sc.time && axes[0].show && opts.max > opts.min) {\n\t\t\t\t\t// since scales and axes are loosly coupled, we have to make some assumptions here :(\n\t\t\t\t\tlet incr = getIncrSpace(axes[0], opts.min, opts.max, plotWidCss)[0];\n\n\t\t\t\t\tif (incr < 1e-3)\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t//\tlog(\"setScale()\", arguments);\n\n\t\t\tpendScales[key] = opts;\n\n\t\t\tdidPaint = false;\n\t\t\tsetScales();\n\t\t\t!didPaint && paint();\n\t\t\tdidPaint = false;\n\t\t}\n\t}\n\n\tself.setScale = setScale;\n\n//\tINTERACTION\n\n\tlet vt;\n\tlet hz;\n\n\t// starting position\n\tlet mouseLeft0;\n\tlet mouseTop0;\n\n\t// current position\n\tlet mouseLeft1;\n\tlet mouseTop1;\n\n\tlet dragging = false;\n\n\tconst drag =  cursor.drag;\n\n\tlet dragX =  drag.x;\n\tlet dragY =  drag.y;\n\n\tif ( cursor.show) {\n\t\tlet c = \"cursor-\";\n\n\t\tif (cursor.x) {\n\t\t\tmouseLeft1 = cursor.left;\n\t\t\tvt = placeDiv(c + \"x\", over);\n\t\t}\n\n\t\tif (cursor.y) {\n\t\t\tmouseTop1 = cursor.top;\n\t\t\thz = placeDiv(c + \"y\", over);\n\t\t}\n\t}\n\n\tconst select = self.select = assign({\n\t\tshow:   true,\n\t\tleft:\t0,\n\t\twidth:\t0,\n\t\ttop:\t0,\n\t\theight:\t0,\n\t}, opts.select);\n\n\tconst selectDiv = select.show ? placeDiv(\"select\", over) : null;\n\n\tfunction setSelect(opts, _fire) {\n\t\tif (select.show) {\n\t\t\tfor (let prop in opts)\n\t\t\t\tsetStylePx(selectDiv, prop, select[prop] = opts[prop]);\n\n\t\t\t_fire !== false && fire(\"setSelect\");\n\t\t}\n\t}\n\n\tself.setSelect = setSelect;\n\n\tfunction toggleDOM(i, onOff) {\n\t\tlet s = series[i];\n\t\tlet label = showLegend ? legendRows[i][0].parentNode : null;\n\n\t\tif (s.show)\n\t\t\tlabel && remClass(label, \"off\");\n\t\telse {\n\t\t\tlabel && addClass(label, \"off\");\n\t\t\t cursorPts.length > 1 && trans(cursorPts[i], 0, -10);\n\t\t}\n\t}\n\n\tfunction _setScale(key, min, max) {\n\t\tsetScale(key, {min, max});\n\t}\n\n\tfunction setSeries(i, opts, pub) {\n\t//\tlog(\"setSeries()\", arguments);\n\n\t\tlet s = series[i];\n\n\t//\tbatch(() => {\n\t\t\t// will this cause redundant paint() if both show and focus are set?\n\t\t\tif (opts.focus != null)\n\t\t\t\tsetFocus(i);\n\n\t\t\tif (opts.show != null) {\n\t\t\t\ts.show = opts.show;\n\t\t\t\t toggleDOM(i, opts.show);\n\n\t\t\t\tif (s.band) {\n\t\t\t\t\t// not super robust, will break if two bands are adjacent\n\t\t\t\t\tlet ip = series[i+1] && series[i+1].band ? i+1 : i-1;\n\t\t\t\t\tseries[ip].show = s.show;\n\t\t\t\t\t toggleDOM(ip, opts.show);\n\t\t\t\t}\n\n\t\t\t\t_setScale(xScaleKey, scales[xScaleKey].min, scales[xScaleKey].max);\t\t// redraw\n\t\t\t}\n\t//\t});\n\n\t\t// firing setSeries after setScale seems out of order, but provides access to the updated props\n\t\t// could improve by predefining firing order and building a queue\n\t\tfire(\"setSeries\", i, opts);\n\n\t\t pub && sync.pub(\"setSeries\", self, i, opts);\n\t}\n\n\tself.setSeries = setSeries;\n\n\tfunction _alpha(i, value) {\n\t\tseries[i].alpha = value;\n\n\t\tif ( legendRows)\n\t\t\tlegendRows[i][0].parentNode.style.opacity = value;\n\t}\n\n\tfunction _setAlpha(i, value) {\n\t\tlet s = series[i];\n\n\t\t_alpha(i, value);\n\n\t\tif (s.band) {\n\t\t\t// not super robust, will break if two bands are adjacent\n\t\t\tlet ip = series[i+1].band ? i+1 : i-1;\n\t\t\t_alpha(ip, value);\n\t\t}\n\t}\n\n\t// y-distance\n\tconst distsToCursor =  Array(series.length);\n\n\tlet focused = null;\n\n\tfunction setFocus(i) {\n\t\tif (i != focused) {\n\t\t//\tlog(\"setFocus()\", arguments);\n\n\t\t\tseries.forEach((s, i2) => {\n\t\t\t\t_setAlpha(i2, i == null || i2 == 0 || i2 == i ? 1 : focus.alpha);\n\t\t\t});\n\n\t\t\tfocused = i;\n\t\t\tpaint();\n\t\t}\n\t}\n\n\tif (showLegend && cursorFocus) {\n\t\ton(mouseleave, legendEl, e => {\n\t\t\tif (cursor.locked)\n\t\t\t\treturn;\n\t\t\tsetSeries(null, {focus: false}, syncOpts.setSeries);\n\t\t\tupdateCursor();\n\t\t});\n\t}\n\n\tfunction scaleValueAtPos(pos, scale) {\n\t\tlet dim = plotWidCss;\n\n\t\tif (scale != xScaleKey) {\n\t\t\tdim = plotHgtCss;\n\t\t\tpos = dim - pos;\n\t\t}\n\n\t\tlet pct = pos / dim;\n\n\t\tlet sc = scales[scale];\n\t\tlet d = sc.max - sc.min;\n\t\treturn sc.min + pct * d;\n\t}\n\n\tfunction closestIdxFromXpos(pos) {\n\t\tlet v = scaleValueAtPos(pos, xScaleKey);\n\t\treturn closestIdx(v, data[0], i0, i1);\n\t}\n\n\tself.valToIdx = val => closestIdx(val, data[0]);\n\tself.posToIdx = closestIdxFromXpos;\n\tself.posToVal = scaleValueAtPos;\n\tself.valToPos = (val, scale, can) => (\n\t\tscale == xScaleKey ?\n\t\tgetXPos(val, scales[scale],\n\t\t\tcan ? plotWid : plotWidCss,\n\t\t\tcan ? plotLft : 0,\n\t\t) :\n\t\tgetYPos(val, scales[scale],\n\t\t\tcan ? plotHgt : plotHgtCss,\n\t\t\tcan ? plotTop : 0,\n\t\t)\n\t);\n\n\tlet inBatch = false;\n\tlet shouldPaint = false;\n\tlet shouldSetScales = false;\n\tlet shouldUpdateCursor = false;\n\n\t// defers calling expensive functions\n\tfunction batch(fn) {\n\t\tinBatch = true;\n\t\tfn(self);\n\t\tinBatch = false;\n\t\tshouldSetScales && setScales();\n\t\t shouldUpdateCursor && updateCursor();\n\t\tshouldPaint && !didPaint && paint();\n\t\tshouldSetScales = shouldUpdateCursor = shouldPaint = didPaint = inBatch;\n\t}\n\n\tself.batch = batch;\n\n\t (self.setCursor = opts => {\n\t\tmouseLeft1 = opts.left;\n\t\tmouseTop1 = opts.top;\n\t//\tassign(cursor, opts);\n\t\tupdateCursor();\n\t});\n\n\tlet cursorRaf = 0;\n\n\tfunction updateCursor(ts, src) {\n\t\tif (inBatch) {\n\t\t\tshouldUpdateCursor = true;\n\t\t\treturn;\n\t\t}\n\n\t//\tts == null && log(\"updateCursor()\", arguments);\n\n\t\tcursorRaf = 0;\n\n\t\tif (cursor.show) {\n\t\t\tcursor.x && trans(vt,round(mouseLeft1),0);\n\t\t\tcursor.y && trans(hz,0,round(mouseTop1));\n\t\t}\n\n\t\tlet idx;\n\n\t\t// when zooming to an x scale range between datapoints the binary search\n\t\t// for nearest min/max indices results in this condition. cheap hack :D\n\t\tlet noDataInRange = i0 > i1;\n\n\t\t// if cursor hidden, hide points & clear legend vals\n\t\tif (mouseLeft1 < 0 || dataLen == 0 || noDataInRange) {\n\t\t\tidx = null;\n\n\t\t\tfor (let i = 0; i < series.length; i++) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tdistsToCursor[i] = inf;\n\t\t\t\t\t cursorPts.length > 1 && trans(cursorPts[i], -10, -10);\n\t\t\t\t}\n\n\t\t\t\tif (showLegend) {\n\t\t\t\t\tif (i == 0 && multiValLegend)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tfor (let j = 0; j < legendRows[i].length; j++)\n\t\t\t\t\t\tlegendRows[i][j][firstChild].nodeValue = '--';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cursorFocus)\n\t\t\t\tsetSeries(null, {focus: true}, syncOpts.setSeries);\n\t\t}\n\t\telse {\n\t\t//\tlet pctY = 1 - (y / rect[HEIGHT]);\n\n\t\t\tidx = closestIdxFromXpos(mouseLeft1);\n\n\t\t\tlet scX = scales[xScaleKey];\n\n\t\t\tlet xPos = round3(getXPos(data[0][idx], scX, plotWidCss, 0));\n\n\t\t\tfor (let i = 0; i < series.length; i++) {\n\t\t\t\tlet s = series[i];\n\n\t\t\t\tif (i > 0 && s.show) {\n\t\t\t\t\tlet valAtIdx = data[i][idx];\n\n\t\t\t\t\tlet yPos = valAtIdx == null ? -10 : round3(getYPos(valAtIdx, scales[s.scale], plotHgtCss, 0));\n\n\t\t\t\t\tdistsToCursor[i] = yPos > 0 ? abs(yPos - mouseTop1) : inf;\n\n\t\t\t\t\t cursorPts.length > 1 && trans(cursorPts[i], xPos, yPos);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tdistsToCursor[i] = inf;\n\n\t\t\t\tif (showLegend) {\n\t\t\t\t\tif (idx == cursor.idx || i == 0 && multiValLegend)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tlet src = i == 0 && xScaleDistr == 2 ? data0 : data[i];\n\n\t\t\t\t\tlet vals = multiValLegend ? s.values(self, i, idx) : {_: s.value(self, src[idx], i, idx)};\n\n\t\t\t\t\tlet j = 0;\n\n\t\t\t\t\tfor (let k in vals)\n\t\t\t\t\t\tlegendRows[i][j++][firstChild].nodeValue = vals[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// nit: cursor.drag.setSelect is assumed always true\n\t\tif (select.show && dragging) {\n\t\t\tlet dx = abs(mouseLeft1 - mouseLeft0);\n\t\t\tlet dy = abs(mouseTop1 - mouseTop0);\n\n\t\t\tif (src != null) {\n\t\t\t\tlet [xKey, yKey] = syncOpts.scales;\n\n\t\t\t\t// match the dragX/dragY implicitness/explicitness of src\n\t\t\t\tlet sdrag = src.cursor.drag;\n\t\t\t\tdragX = sdrag._x;\n\t\t\t\tdragY = sdrag._y;\n\n\t\t\t\tif (xKey) {\n\t\t\t\t\tlet sc = scales[xKey];\n\t\t\t\t\tlet srcLeft = src.posToVal(src.select[LEFT], xKey);\n\t\t\t\t\tlet srcRight = src.posToVal(src.select[LEFT] + src.select[WIDTH], xKey);\n\n\t\t\t\t\tselect[LEFT] = getXPos(srcLeft, sc, plotWidCss, 0);\n\t\t\t\t\tselect[WIDTH] = abs(select[LEFT] - getXPos(srcRight, sc, plotWidCss, 0));\n\n\t\t\t\t\tsetStylePx(selectDiv, LEFT, select[LEFT]);\n\t\t\t\t\tsetStylePx(selectDiv, WIDTH, select[WIDTH]);\n\n\t\t\t\t\tif (!yKey) {\n\t\t\t\t\t\tsetStylePx(selectDiv, TOP, select[TOP] = 0);\n\t\t\t\t\t\tsetStylePx(selectDiv, HEIGHT, select[HEIGHT] = plotHgtCss);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (yKey) {\n\t\t\t\t\tlet sc = scales[yKey];\n\t\t\t\t\tlet srcTop = src.posToVal(src.select[TOP], yKey);\n\t\t\t\t\tlet srcBottom = src.posToVal(src.select[TOP] + src.select[HEIGHT], yKey);\n\n\t\t\t\t\tselect[TOP] = getYPos(srcTop, sc, plotHgtCss, 0);\n\t\t\t\t\tselect[HEIGHT] = abs(select[TOP] - getYPos(srcBottom, sc, plotHgtCss, 0));\n\n\t\t\t\t\tsetStylePx(selectDiv, TOP, select[TOP]);\n\t\t\t\t\tsetStylePx(selectDiv, HEIGHT, select[HEIGHT]);\n\n\t\t\t\t\tif (!xKey) {\n\t\t\t\t\t\tsetStylePx(selectDiv, LEFT, select[LEFT] = 0);\n\t\t\t\t\t\tsetStylePx(selectDiv, WIDTH, select[WIDTH] = plotWidCss);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdragX = drag.x && dx >= drag.dist;\n\t\t\t\tdragY = drag.y && dy >= drag.dist;\n\n\t\t\t\tlet uni = drag.uni;\n\n\t\t\t\tif (uni != null) {\n\t\t\t\t\t// only calc drag status if they pass the dist thresh\n\t\t\t\t\tif (dragX && dragY) {\n\t\t\t\t\t\tdragX = dx >= uni;\n\t\t\t\t\t\tdragY = dy >= uni;\n\n\t\t\t\t\t\t// force unidirectionality when both are under uni limit\n\t\t\t\t\t\tif (!dragX && !dragY) {\n\t\t\t\t\t\t\tif (dy > dx)\n\t\t\t\t\t\t\t\tdragY = true;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tdragX = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (drag.x && drag.y && (dragX || dragY))\n\t\t\t\t\t// if omni with no uni then both dragX / dragY should be true if either is true\n\t\t\t\t\tdragX = dragY = true;\n\n\t\t\t\tif (dragX) {\n\t\t\t\t\tlet minX = min(mouseLeft0, mouseLeft1);\n\n\t\t\t\t\tsetStylePx(selectDiv, LEFT,  select[LEFT] = minX);\n\t\t\t\t\tsetStylePx(selectDiv, WIDTH, select[WIDTH] = dx);\n\n\t\t\t\t\tif (!dragY) {\n\t\t\t\t\t\tsetStylePx(selectDiv, TOP, select[TOP] = 0);\n\t\t\t\t\t\tsetStylePx(selectDiv, HEIGHT, select[HEIGHT] = plotHgtCss);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (dragY) {\n\t\t\t\t\tlet minY = min(mouseTop0, mouseTop1);\n\n\t\t\t\t\tsetStylePx(selectDiv, TOP,    select[TOP] = minY);\n\t\t\t\t\tsetStylePx(selectDiv, HEIGHT, select[HEIGHT] = dy);\n\n\t\t\t\t\tif (!dragX) {\n\t\t\t\t\t\tsetStylePx(selectDiv, LEFT, select[LEFT] = 0);\n\t\t\t\t\t\tsetStylePx(selectDiv, WIDTH, select[WIDTH] = plotWidCss);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!dragX && !dragY) {\n\t\t\t\t\t// the drag didn't pass the dist requirement\n\t\t\t\t\tsetStylePx(selectDiv, HEIGHT, select[HEIGHT] = 0);\n\t\t\t\t\tsetStylePx(selectDiv, WIDTH,  select[WIDTH]  = 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcursor.idx = idx;\n\t\tcursor.left = mouseLeft1;\n\t\tcursor.top = mouseTop1;\n\t\tdrag._x = dragX;\n\t\tdrag._y = dragY;\n\n\t\t// if ts is present, means we're implicitly syncing own cursor as a result of debounced rAF\n\t\tif (ts != null) {\n\t\t\t// this is not technically a \"mousemove\" event, since it's debounced, rename to setCursor?\n\t\t\t// since this is internal, we can tweak it later\n\t\t\tsync.pub(mousemove, self, mouseLeft1, mouseTop1, plotWidCss, plotHgtCss, idx);\n\n\t\t\tif (cursorFocus) {\n\t\t\t\tlet minDist = min.apply(null, distsToCursor);\n\n\t\t\t\tlet fi = null;\n\n\t\t\t\tif (minDist <= focus.prox) {\n\t\t\t\t\tdistsToCursor.some((dist, i) => {\n\t\t\t\t\t\tif (dist == minDist)\n\t\t\t\t\t\t\treturn fi = i;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tsetSeries(fi, {focus: true}, syncOpts.setSeries);\n\t\t\t}\n\t\t}\n\n\t\tready && fire(\"setCursor\");\n\t}\n\n\tlet rect = null;\n\n\tfunction syncRect() {\n\t\trect = over.getBoundingClientRect();\n\t}\n\n\tfunction mouseMove(e, src, _x, _y, _w, _h, _i) {\n\t\tif (cursor.locked)\n\t\t\treturn;\n\n\t\tcacheMouse(e, src, _x, _y, _w, _h, _i, false, e != null);\n\n\t\tif (e != null) {\n\t\t\tif (cursorRaf == 0)\n\t\t\t\tcursorRaf = rAF(updateCursor);\n\t\t}\n\t\telse\n\t\t\tupdateCursor(null, src);\n\t}\n\n\tfunction cacheMouse(e, src, _x, _y, _w, _h, _i, initial, snap) {\n\t\tif (e != null) {\n\t\t\t_x = e.clientX - rect.left;\n\t\t\t_y = e.clientY - rect.top;\n\t\t}\n\t\telse {\n\t\t\tif (_x < 0 || _y < 0) {\n\t\t\t\tmouseLeft1 = -10;\n\t\t\t\tmouseTop1 = -10;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet [xKey, yKey] = syncOpts.scales;\n\n\t\t\tif (xKey != null)\n\t\t\t\t_x = getXPos(src.posToVal(_x, xKey), scales[xKey], plotWidCss, 0);\n\t\t\telse\n\t\t\t\t_x = plotWidCss * (_x/_w);\n\n\t\t\tif (yKey != null)\n\t\t\t\t_y = getYPos(src.posToVal(_y, yKey), scales[yKey], plotHgtCss, 0);\n\t\t\telse\n\t\t\t\t_y = plotHgtCss * (_y/_h);\n\t\t}\n\n\t\tif (snap) {\n\t\t\tif (_x <= 1 || _x >= plotWidCss - 1)\n\t\t\t\t_x = incrRound(_x, plotWidCss);\n\n\t\t\tif (_y <= 1 || _y >= plotHgtCss - 1)\n\t\t\t\t_y = incrRound(_y, plotHgtCss);\n\t\t}\n\n\t\tif (initial) {\n\t\t\tmouseLeft0 = _x;\n\t\t\tmouseTop0 = _y;\n\t\t}\n\t\telse {\n\t\t\tmouseLeft1 = _x;\n\t\t\tmouseTop1 = _y;\n\t\t}\n\t}\n\n\tfunction hideSelect() {\n\t\tsetSelect({\n\t\t\twidth: 0,\n\t\t\theight: 0,\n\t\t}, false);\n\t}\n\n\tfunction mouseDown(e, src, _x, _y, _w, _h, _i) {\n\t\tif (src != null || filtMouse(e)) {\n\t\t\tdragging = true;\n\t\t\tdragX = dragY = drag._x = drag._y = false;\n\n\t\t\tcacheMouse(e, src, _x, _y, _w, _h, _i, true, false);\n\n\t\t\tif (e != null) {\n\t\t\t\ton(mouseup, doc, mouseUp);\n\t\t\t\tsync.pub(mousedown, self, mouseLeft0, mouseTop0, plotWidCss, plotHgtCss, null);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction mouseUp(e, src, _x, _y, _w, _h, _i) {\n\t\tif (src != null || filtMouse(e)) {\n\t\t\tdragging = drag._x = drag._y = false;\n\n\t\t\tcacheMouse(e, src, _x, _y, _w, _h, _i, false, true);\n\n\t\t\tlet hasSelect = select[WIDTH] > 0 || select[HEIGHT] > 0;\n\n\t\t\thasSelect && setSelect(select);\n\n\t\t\tif (drag.setScale && hasSelect) {\n\t\t\t//\tif (syncKey != null) {\n\t\t\t//\t\tdragX = drag.x;\n\t\t\t//\t\tdragY = drag.y;\n\t\t\t//\t}\n\n\t\t\t\tbatch(() => {\n\t\t\t\t\tif (dragX) {\n\t\t\t\t\t\t_setScale(xScaleKey,\n\t\t\t\t\t\t\tscaleValueAtPos(select[LEFT], xScaleKey),\n\t\t\t\t\t\t\tscaleValueAtPos(select[LEFT] + select[WIDTH], xScaleKey)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dragY) {\n\t\t\t\t\t\tfor (let k in scales) {\n\t\t\t\t\t\t\tlet sc = scales[k];\n\n\t\t\t\t\t\t\tif (k != xScaleKey && sc.from == null) {\n\t\t\t\t\t\t\t\t_setScale(k,\n\t\t\t\t\t\t\t\t\tscaleValueAtPos(select[TOP] + select[HEIGHT], k),\n\t\t\t\t\t\t\t\t\tscaleValueAtPos(select[TOP], k)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thideSelect();\n\t\t\t}\n\t\t\telse if (cursor.lock) {\n\t\t\t\tcursor.locked = !cursor.locked;\n\n\t\t\t\tif (!cursor.locked)\n\t\t\t\t\tupdateCursor();\n\t\t\t}\n\t\t}\n\n\t\tif (e != null) {\n\t\t\toff(mouseup, doc, mouseUp);\n\t\t\tsync.pub(mouseup, self, mouseLeft1, mouseTop1, plotWidCss, plotHgtCss, null);\n\t\t}\n\t}\n\n\tfunction mouseLeave(e, src, _x, _y, _w, _h, _i) {\n\t\tif (!cursor.locked) {\n\t\t\tlet _dragging = dragging;\n\n\t\t\tif (dragging) {\n\t\t\t\t// handle case when mousemove aren't fired all the way to edges by browser\n\t\t\t\tlet snapX = true;\n\t\t\t\tlet snapY = true;\n\t\t\t\tlet snapProx = 10;\n\n\t\t\t\tif (dragX && dragY) {\n\t\t\t\t\t// maybe omni corner snap\n\t\t\t\t\tsnapX = mouseLeft1 <= snapProx || mouseLeft1 >= plotWidCss - snapProx;\n\t\t\t\t\tsnapY = mouseTop1  <= snapProx || mouseTop1  >= plotHgtCss - snapProx;\n\t\t\t\t}\n\n\t\t\t\tif (dragX && snapX) {\n\t\t\t\t\tlet dLft = mouseLeft1;\n\t\t\t\t\tlet dRgt = plotWidCss - mouseLeft1;\n\n\t\t\t\t\tlet xMin = min(dLft, dRgt);\n\n\t\t\t\t\tif (xMin == dLft)\n\t\t\t\t\t\tmouseLeft1 = 0;\n\t\t\t\t\tif (xMin == dRgt)\n\t\t\t\t\t\tmouseLeft1 = plotWidCss;\n\t\t\t\t}\n\n\t\t\t\tif (dragY && snapY) {\n\t\t\t\t\tlet dTop = mouseTop1;\n\t\t\t\t\tlet dBtm = plotHgtCss - mouseTop1;\n\n\t\t\t\t\tlet yMin = min(dTop, dBtm);\n\n\t\t\t\t\tif (yMin == dTop)\n\t\t\t\t\t\tmouseTop1 = 0;\n\t\t\t\t\tif (yMin == dBtm)\n\t\t\t\t\t\tmouseTop1 = plotHgtCss;\n\t\t\t\t}\n\n\t\t\t\tupdateCursor(1);\n\n\t\t\t\tdragging = false;\n\t\t\t}\n\n\t\t\tmouseLeft1 = -10;\n\t\t\tmouseTop1 = -10;\n\n\t\t\t// passing a non-null timestamp to force sync/mousemove event\n\t\t\tupdateCursor(1);\n\n\t\t\tif (_dragging)\n\t\t\t\tdragging = _dragging;\n\t\t}\n\t}\n\n\tfunction dblClick(e, src, _x, _y, _w, _h, _i) {\n\t\tautoScaleX();\n\n\t\thideSelect();\n\n\t\tif (e != null)\n\t\t\tsync.pub(dblclick, self, mouseLeft1, mouseTop1, plotWidCss, plotHgtCss, null);\n\t}\n\n\t// internal pub/sub\n\tconst events = {};\n\n\tevents[mousedown] = mouseDown;\n\tevents[mousemove] = mouseMove;\n\tevents[mouseup] = mouseUp;\n\tevents[dblclick] = dblClick;\n\tevents[\"setSeries\"] = (e, src, idx, opts) => {\n\t\tsetSeries(idx, opts);\n\t};\n\n\tlet deb;\n\n\tif ( cursor.show) {\n\t\ton(mousedown, over, mouseDown);\n\t\ton(mousemove, over, mouseMove);\n\t\ton(mouseenter, over, syncRect);\n\t\t// this has to be rAF'd so it always fires after the last queued/rAF'd updateCursor\n\t\ton(mouseleave, over, e => { rAF(mouseLeave); });\n\n\t\ton(dblclick, over, dblClick);\n\n\t\tdeb = debounce(syncRect, 100);\n\n\t\ton(resize, win, deb);\n\t\ton(scroll, win, deb);\n\n\t\tself.syncRect = syncRect;\n\t}\n\n\t// external on/off\n\tconst hooks = self.hooks = opts.hooks || {};\n\n\tfunction fire(evName, a1, a2) {\n\t\tif (evName in hooks) {\n\t\t\thooks[evName].forEach(fn => {\n\t\t\t\tfn.call(null, self, a1, a2);\n\t\t\t});\n\t\t}\n\t}\n\n\t(opts.plugins || []).forEach(p => {\n\t\tfor (let evName in p.hooks)\n\t\t\thooks[evName] = (hooks[evName] || []).concat(p.hooks[evName]);\n\t});\n\n\tconst syncOpts =  assign({\n\t\tkey: null,\n\t\tsetSeries: false,\n\t\tscales: [xScaleKey, null]\n\t}, cursor.sync);\n\n\tconst syncKey =  syncOpts.key;\n\n\tconst sync =  (syncKey != null ? (syncs[syncKey] = syncs[syncKey] || _sync()) : _sync());\n\n\t sync.sub(self);\n\n\tfunction pub(type, src, x, y, w, h, i) {\n\t\tevents[type](null, src, x, y, w, h, i);\n\t}\n\n\t (self.pub = pub);\n\n\tfunction destroy() {\n\t\t sync.unsub(self);\n\t\t off(resize, win, deb);\n\t\t off(scroll, win, deb);\n\t\troot.remove();\n\t\tfire(\"destroy\");\n\t}\n\n\tself.destroy = destroy;\n\n\tfunction _init() {\n\t\t_setSize(opts[WIDTH], opts[HEIGHT]);\n\n\t\tfire(\"init\", opts, data);\n\n\t\tsetData(data || opts.data, false);\n\n\t\tif (pendScales[xScaleKey])\n\t\t\tsetScale(xScaleKey, pendScales[xScaleKey]);\n\t\telse\n\t\t\tautoScaleX();\n\n\t\tsetSelect(select, false);\n\n\t\tready = true;\n\n\t\tfire(\"ready\");\n\t}\n\n\tif (then) {\n\t\tif (then instanceof HTMLElement) {\n\t\t\tthen.appendChild(root);\n\t\t\t_init();\n\t\t}\n\t\telse\n\t\t\tthen(self, _init);\n\t}\n\telse\n\t\t_init();\n\n\treturn self;\n}\n\nuPlot.assign = assign;\nuPlot.rangeNum = rangeNum;\n\n{\n\tuPlot.fmtDate = fmtDate;\n\tuPlot.tzDate  = tzDate;\n}\n\nexport default uPlot;\n","export class RelativeScale {\r\n  static scale (data, tickCount, maxFactor) {\r\n    const { min, max } = RelativeScale.calculateBounds(data)\r\n\r\n    let factor = 1\r\n\r\n    while (true) {\r\n      const scale = Math.pow(10, factor)\r\n\r\n      const scaledMin = min - (min % scale)\r\n      let scaledMax = max + (max % scale === 0 ? 0 : scale - (max % scale))\r\n\r\n      // Prevent min/max from being equal (and generating 0 ticks)\r\n      // This happens when all data points are products of scale value\r\n      if (scaledMin === scaledMax) {\r\n        scaledMax += scale\r\n      }\r\n\r\n      const ticks = (scaledMax - scaledMin) / scale\r\n\r\n      if (ticks <= tickCount || (typeof maxFactor === 'number' && factor === maxFactor)) {\r\n        return {\r\n          scaledMin,\r\n          scaledMax,\r\n          scale\r\n        }\r\n      } else {\r\n        // Too many steps between min/max, increase factor and try again\r\n        factor++\r\n      }\r\n    }\r\n  }\r\n\r\n  static scaleMatrix (data, tickCount, maxFactor) {\r\n    const nonNullData = data.flat().filter((val) => val !== null)\r\n\r\n    // when used with the spread operator large nonNullData/data arrays can reach the max call stack size\r\n    // use reduce calls to safely determine min/max values for any size of array\r\n    // https://stackoverflow.com/questions/63705432/maximum-call-stack-size-exceeded-when-using-the-dots-operator/63706516#63706516\r\n    const max = nonNullData.reduce((a, b) => {\r\n      return Math.max(a, b)\r\n    }, Number.NEGATIVE_INFINITY)\r\n\r\n    return RelativeScale.scale(\r\n      [0, RelativeScale.isFiniteOrZero(max)],\r\n      tickCount,\r\n      maxFactor\r\n    )\r\n  }\r\n\r\n  static generateTicks (min, max, step) {\r\n    const ticks = []\r\n    for (let i = min; i <= max; i += step) {\r\n      ticks.push(i)\r\n    }\r\n    return ticks\r\n  }\r\n\r\n  static calculateBounds (data) {\r\n    if (data.length === 0) {\r\n      return {\r\n        min: 0,\r\n        max: 0\r\n      }\r\n    } else {\r\n      const nonNullData = data.filter((val) => val !== null)\r\n\r\n      // when used with the spread operator large nonNullData/data arrays can reach the max call stack size\r\n      // use reduce calls to safely determine min/max values for any size of array\r\n      // https://stackoverflow.com/questions/63705432/maximum-call-stack-size-exceeded-when-using-the-dots-operator/63706516#63706516\r\n      const min = nonNullData.reduce((a, b) => {\r\n        return Math.min(a, b)\r\n      }, Number.POSITIVE_INFINITY)\r\n      const max = nonNullData.reduce((a, b) => {\r\n        return Math.max(a, b)\r\n      }, Number.NEGATIVE_INFINITY)\r\n\r\n      return {\r\n        min: RelativeScale.isFiniteOrZero(min),\r\n        max: RelativeScale.isFiniteOrZero(max)\r\n      }\r\n    }\r\n  }\r\n\r\n  static isFiniteOrZero (val) {\r\n    return Number.isFinite(val) ? val : 0\r\n  }\r\n}\r\n","export class Tooltip {\r\n  constructor () {\r\n    this._div = document.getElementById('tooltip')\r\n  }\r\n\r\n  set (x, y, offsetX, offsetY, html) {\r\n    this._div.innerHTML = html\r\n\r\n    // Assign display: block so that the offsetWidth is valid\r\n    this._div.style.display = 'block'\r\n\r\n    // Prevent the div from overflowing the page width\r\n    const tooltipWidth = this._div.offsetWidth\r\n\r\n    // 1.2 is a magic number used to pad the offset to ensure the tooltip\r\n    // never gets close or surpasses the page's X width\r\n    if (x + offsetX + (tooltipWidth * 1.2) > window.innerWidth) {\r\n      x -= tooltipWidth\r\n      offsetX *= -1\r\n    }\r\n\r\n    this._div.style.top = `${y + offsetY}px`\r\n    this._div.style.left = `${x + offsetX}px`\r\n  }\r\n\r\n  hide = () => {\r\n    this._div.style.display = 'none'\r\n  }\r\n}\r\n\r\nexport class Caption {\r\n  constructor () {\r\n    this._div = document.getElementById('status-text')\r\n  }\r\n\r\n  set (text) {\r\n    this._div.innerText = text\r\n    this._div.style.display = 'block'\r\n  }\r\n\r\n  hide () {\r\n    this._div.style.display = 'none'\r\n  }\r\n}\r\n\r\n// Minecraft Java Edition default server port: 25565\r\n// Minecraft Bedrock Edition default server port: 19132\r\nconst MINECRAFT_DEFAULT_PORTS = [25565, 19132]\r\n\r\nexport function formatMinecraftServerAddress (ip, port) {\r\n  if (port && !MINECRAFT_DEFAULT_PORTS.includes(port)) {\r\n    return `${ip}:${port}`\r\n  }\r\n  return ip\r\n}\r\n\r\n// Detect gaps in versions by matching their indexes to knownVersions\r\nexport function formatMinecraftVersions (versions, knownVersions) {\r\n  if (!versions || !versions.length || !knownVersions || !knownVersions.length) {\r\n    return\r\n  }\r\n\r\n  let currentVersionGroup = []\r\n  const versionGroups = []\r\n\r\n  for (let i = 0; i < versions.length; i++) {\r\n    // Look for value mismatch between the previous index\r\n    // Require i > 0 since lastVersionIndex is undefined for i === 0\r\n    if (i > 0 && versions[i] - versions[i - 1] !== 1) {\r\n      versionGroups.push(currentVersionGroup)\r\n      currentVersionGroup = []\r\n    }\r\n\r\n    currentVersionGroup.push(versions[i])\r\n  }\r\n\r\n  // Ensure the last versionGroup is always pushed\r\n  if (currentVersionGroup.length > 0) {\r\n    versionGroups.push(currentVersionGroup)\r\n  }\r\n\r\n  if (versionGroups.length === 0) {\r\n    return\r\n  }\r\n\r\n  // Remap individual versionGroups values into named versions\r\n  return versionGroups.map(versionGroup => {\r\n    const startVersion = knownVersions[versionGroup[0]]\r\n\r\n    if (versionGroup.length === 1) {\r\n      // A versionGroup may contain a single version, only return its name\r\n      // This is a cosmetic catch to avoid version labels like 1.0-1.0\r\n      return startVersion\r\n    } else {\r\n      const endVersion = knownVersions[versionGroup[versionGroup.length - 1]]\r\n      return `${startVersion}-${endVersion}`\r\n    }\r\n  }).join(', ')\r\n}\r\n\r\n// 이 함수는 원래대로 '시점'의 시간을 표시하도록 되돌립니다.\r\nexport function formatTimestampSeconds (secs) {\r\n  const date = new Date(0)\r\n  date.setUTCSeconds(secs)\r\n  return date.toLocaleTimeString() // 예: \"오후 3:15:00\"\r\n}\r\nexport function formatDate (secs) {\r\n  const date = new Date(0)\r\n  date.setUTCSeconds(secs)\r\n  return date.toLocaleDateString()\r\n}\r\n\r\nexport function formatPercent (x, over) {\r\n  const val = Math.round((x / over) * 100 * 10) / 10\r\n  return `${val}%`\r\n}\r\n\r\nexport function formatNumber (x) {\r\n  if (typeof x !== 'number') {\r\n    return '-'\r\n  } else {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\r\n  }\r\n}\r\n","export function uPlotTooltipPlugin (onHover) {\r\n  let element\r\n\r\n  return {\r\n    hooks: {\r\n      init: u => {\r\n        element = u.root.querySelector('.over')\r\n\r\n        element.onmouseenter = () => onHover()\r\n        element.onmouseleave = () => onHover()\r\n      },\r\n      setCursor: u => {\r\n        const { left, top, idx } = u.cursor\r\n\r\n        if (idx === null) {\r\n          onHover()\r\n        } else {\r\n          const bounds = element.getBoundingClientRect()\r\n\r\n          onHover({\r\n            left: bounds.left + left + window.pageXOffset,\r\n            top: bounds.top + top + window.pageYOffset\r\n          }, idx)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","module.exports = require('./helpers/bundle-url').getBundleURL('6aCO0') + \"missing_favicon.22b4e869.svg\";","export class SocketManager {\r\n  constructor (app) {\r\n    this._app = app\r\n    this._hasRequestedHistoryGraph = false\r\n    this._reconnectDelayBase = 0\r\n  }\r\n\r\n  reset () {\r\n    this._hasRequestedHistoryGraph = false\r\n  }\r\n\r\n  createWebSocket () {\r\n    let webSocketProtocol = 'ws:'\r\n    if (location.protocol === 'https:') {\r\n      webSocketProtocol = 'wss:'\r\n    }\r\n\r\n    this._webSocket = new WebSocket(`${webSocketProtocol}//${location.host}`)\r\n\r\n    // The backend will automatically push data once connected\r\n    this._webSocket.onopen = () => {\r\n      this._app.caption.set('Loading...')\r\n\r\n      // Reset reconnection scheduling since the WebSocket has been established\r\n      this._reconnectDelayBase = 0\r\n    }\r\n\r\n    this._webSocket.onclose = (event) => {\r\n      this._app.handleDisconnect()\r\n\r\n      // Modify page state to display loading overlay\r\n      // Code 1006 denotes \"Abnormal closure\", most likely from the server or client losing connection\r\n      // See https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\r\n      // Treat other codes as active errors (besides connectivity errors) when displaying the message\r\n      if (event.code === 1006) {\r\n        this._app.caption.set('Lost connection!')\r\n      } else {\r\n        this._app.caption.set('Disconnected due to error.')\r\n      }\r\n\r\n      // Schedule socket reconnection attempt\r\n      this.scheduleReconnect()\r\n    }\r\n\r\n    this._webSocket.onmessage = (message) => {\r\n      const payload = JSON.parse(message.data)\r\n\r\n      switch (payload.message) {\r\n        case 'init':\r\n          this._app.setPublicConfig(payload.config)\r\n\r\n          // Display the main page component\r\n          // Called here instead of syncComplete so the DOM can be drawn prior to the graphs being drawn\r\n          this._app.setPageReady(true)\r\n\r\n          // Allow the graphDisplayManager to control whether or not the historical graph is loaded\r\n          // Defer to isGraphVisible from the publicConfig to understand if the frontend will ever receive a graph payload\r\n          if (this._app.publicConfig.isGraphVisible) {\r\n            this.sendHistoryGraphRequest()\r\n          }\r\n\r\n          payload.servers.forEach((serverPayload, serverId) => {\r\n            this._app.addServer(serverId, serverPayload, payload.timestampPoints)\r\n          })\r\n\r\n          // Init payload contains all data needed to render the page\r\n          // Alert the app it is ready\r\n          this._app.handleSyncComplete()\r\n\r\n          break\r\n\r\n        case 'updateServers': {\r\n          for (let serverId = 0; serverId < payload.updates.length; serverId++) {\r\n            // The backend may send \"update\" events prior to receiving all \"add\" events\r\n            // A server has only been added once it's ServerRegistration is defined\r\n            // Checking undefined protects from this race condition\r\n            const serverRegistration = this._app.serverRegistry.getServerRegistration(serverId)\r\n            const serverUpdate = payload.updates[serverId]\r\n\r\n            if (serverRegistration) {\r\n              serverRegistration.handlePing(serverUpdate, payload.timestamp)\r\n              serverRegistration.updateServerStatus(serverUpdate, this._app.publicConfig.minecraftVersions)\r\n            }\r\n          }\r\n\r\n          // Bulk add playerCounts into graph during #updateHistoryGraph\r\n          if (payload.updateHistoryGraph) {\r\n            this._app.graphDisplayManager.addGraphPoint(payload.timestamp, Object.values(payload.updates).map(update => update.playerCount))\r\n\r\n            // Run redraw tasks after handling bulk updates\r\n            this._app.graphDisplayManager.redraw()\r\n          }\r\n\r\n          this._app.percentageBar.redraw()\r\n          this._app.updateGlobalStats()\r\n\r\n          break\r\n        }\r\n\r\n        case 'historyGraph': {\r\n          this._app.graphDisplayManager.buildPlotInstance(payload.timestamps, payload.graphData)\r\n\r\n          // Build checkbox elements for graph controls\r\n          let lastRowCounter = 0\r\n          let controlsHTML = ''\r\n\r\n          this._app.serverRegistry.getServerRegistrations()\r\n            .map(serverRegistration => serverRegistration.data.name)\r\n            .sort()\r\n            .forEach(serverName => {\r\n              const serverRegistration = this._app.serverRegistry.getServerRegistration(serverName)\r\n\r\n              controlsHTML += `<td><label>\r\n                <input type=\"checkbox\" class=\"graph-control\" minetrack-server-id=\"${serverRegistration.serverId}\" ${serverRegistration.isVisible ? 'checked' : ''}>\r\n                ${serverName}\r\n                </label></td>`\r\n\r\n              // Occasionally break table rows using a magic number\r\n              if (++lastRowCounter % 6 === 0) {\r\n                controlsHTML += '</tr><tr>'\r\n              }\r\n            })\r\n\r\n          // Apply generated HTML and show controls\r\n          document.getElementById('big-graph-checkboxes').innerHTML = `<table><tr>${controlsHTML}</tr></table>`\r\n          document.getElementById('big-graph-controls').style.display = 'block'\r\n\r\n          // Bind click event for updating graph data\r\n          this._app.graphDisplayManager.initEventListeners()\r\n          break\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  scheduleReconnect () {\r\n    // Release any active WebSocket references\r\n    this._webSocket = undefined\r\n\r\n    this._reconnectDelayBase++\r\n\r\n    // Exponential backoff for reconnection attempts\r\n    // Clamp ceiling value to 30 seconds\r\n    this._reconnectDelaySeconds = Math.min((this._reconnectDelayBase * this._reconnectDelayBase), 30)\r\n\r\n    const reconnectInterval = setInterval(() => {\r\n      this._reconnectDelaySeconds--\r\n\r\n      if (this._reconnectDelaySeconds === 0) {\r\n        // Explicitly clear interval, this avoids race conditions\r\n        // #clearInterval first to avoid potential errors causing pre-mature returns\r\n        clearInterval(reconnectInterval)\r\n\r\n        // Update displayed text\r\n        this._app.caption.set('Reconnecting...')\r\n\r\n        // Attempt reconnection\r\n        // Only attempt when reconnectDelaySeconds === 0 and not <= 0, otherwise multiple attempts may be started\r\n        this.createWebSocket()\r\n      } else if (this._reconnectDelaySeconds > 0) {\r\n        // Update displayed text\r\n        this._app.caption.set(`Reconnecting in ${this._reconnectDelaySeconds}s...`)\r\n      }\r\n    }, 1000)\r\n  }\r\n\r\n  sendHistoryGraphRequest () {\r\n    if (!this._hasRequestedHistoryGraph) {\r\n      this._hasRequestedHistoryGraph = true\r\n\r\n      // Send request as a plain text string to avoid the server needing to parse JSON\r\n      // This is mostly to simplify the backend server's need for error handling\r\n      this._webSocket.send('requestHistoryGraph')\r\n    }\r\n  }\r\n}\r\n","const SORT_OPTIONS = [\r\n  {\r\n    getName: () => '접속자 수',\r\n    sortFunc: (a, b) => b.playerCount - a.playerCount,\r\n    highlightedValue: 'player-count'\r\n  },\r\n  {\r\n    getName: (app) => {\r\n      return `${app.publicConfig.graphDurationLabel} 최고접속`\r\n    },\r\n    sortFunc: (a, b) => {\r\n      if (!a.lastPeakData && !b.lastPeakData) {\r\n        return 0\r\n      } else if (a.lastPeakData && !b.lastPeakData) {\r\n        return -1\r\n      } else if (b.lastPeakData && !a.lastPeakData) {\r\n        return 1\r\n      }\r\n      return b.lastPeakData.playerCount - a.lastPeakData.playerCount\r\n    },\r\n    testFunc: (app) => {\r\n      // Require at least one ServerRegistration to have a lastPeakData value defined\r\n      for (const serverRegistration of app.serverRegistry.getServerRegistrations()) {\r\n        if (serverRegistration.lastPeakData) {\r\n          return true\r\n        }\r\n      }\r\n      return false\r\n    },\r\n    highlightedValue: 'peak'\r\n  },\r\n  {\r\n    getName: () => '최고 기록',\r\n    sortFunc: (a, b) => {\r\n      if (!a.lastRecordData && !b.lastRecordData) {\r\n        return 0\r\n      } else if (a.lastRecordData && !b.lastRecordData) {\r\n        return -1\r\n      } else if (b.lastRecordData && !a.lastRecordData) {\r\n        return 1\r\n      }\r\n      return b.lastRecordData.playerCount - a.lastRecordData.playerCount\r\n    },\r\n    testFunc: (app) => {\r\n      // Require at least one ServerRegistration to have a lastRecordData value defined\r\n      for (const serverRegistration of app.serverRegistry.getServerRegistrations()) {\r\n        if (serverRegistration.lastRecordData) {\r\n          return true\r\n        }\r\n      }\r\n      return false\r\n    },\r\n    highlightedValue: 'record'\r\n  }\r\n]\r\n\r\nconst SORT_OPTION_INDEX_DEFAULT = 0\r\nconst SORT_OPTION_INDEX_STORAGE_KEY = 'minetrack_sort_option_index'\r\n\r\nexport class SortController {\r\n  constructor (app) {\r\n    this._app = app\r\n    this._buttonElement = document.getElementById('sort-by')\r\n    this._textElement = document.getElementById('sort-by-text')\r\n    this._sortOptionIndex = SORT_OPTION_INDEX_DEFAULT\r\n  }\r\n\r\n  reset () {\r\n    this._lastSortedServers = undefined\r\n\r\n    // Reset modified DOM structures\r\n    this._buttonElement.style.display = 'none'\r\n    this._textElement.innerText = '...'\r\n\r\n    // Remove bound DOM event listeners\r\n    this._buttonElement.removeEventListener('click', this.handleSortByButtonClick)\r\n  }\r\n\r\n  loadLocalStorage () {\r\n    if (typeof localStorage !== 'undefined') {\r\n      const sortOptionIndex = localStorage.getItem(SORT_OPTION_INDEX_STORAGE_KEY)\r\n      if (sortOptionIndex) {\r\n        this._sortOptionIndex = parseInt(sortOptionIndex)\r\n      }\r\n    }\r\n  }\r\n\r\n  updateLocalStorage () {\r\n    if (typeof localStorage !== 'undefined') {\r\n      if (this._sortOptionIndex !== SORT_OPTION_INDEX_DEFAULT) {\r\n        localStorage.setItem(SORT_OPTION_INDEX_STORAGE_KEY, this._sortOptionIndex)\r\n      } else {\r\n        localStorage.removeItem(SORT_OPTION_INDEX_STORAGE_KEY)\r\n      }\r\n    }\r\n  }\r\n\r\n  show () {\r\n    // Load the saved option selection, if any\r\n    this.loadLocalStorage()\r\n\r\n    this.updateSortOption()\r\n\r\n    // Bind DOM event listeners\r\n    // This is removed by #reset to avoid multiple listeners\r\n    this._buttonElement.addEventListener('click', this.handleSortByButtonClick)\r\n\r\n    // Show #sort-by element\r\n    this._buttonElement.style.display = 'inline-block'\r\n  }\r\n\r\n  handleSortByButtonClick = () => {\r\n    while (true) {\r\n      // Increment to the next sort option, wrap around if needed\r\n      this._sortOptionIndex = (this._sortOptionIndex + 1) % SORT_OPTIONS.length\r\n\r\n      // Only break if the sortOption is supported\r\n      // This can technically cause an infinite loop, but never should assuming\r\n      // at least one sortOption does not implement the test OR always returns true\r\n      const sortOption = SORT_OPTIONS[this._sortOptionIndex]\r\n\r\n      if (!sortOption.testFunc || sortOption.testFunc(this._app)) {\r\n        break\r\n      }\r\n    }\r\n\r\n    // Redraw the button and sort the servers\r\n    this.updateSortOption()\r\n\r\n    // Save the updated option selection\r\n    this.updateLocalStorage()\r\n  }\r\n\r\n  updateSortOption = () => {\r\n    const sortOption = SORT_OPTIONS[this._sortOptionIndex]\r\n\r\n    // Pass app instance so sortOption names can be dynamically generated\r\n    this._textElement.innerText = sortOption.getName(this._app)\r\n\r\n    // Update all servers highlighted values\r\n    for (const serverRegistration of this._app.serverRegistry.getServerRegistrations()) {\r\n      serverRegistration.updateHighlightedValue(sortOption.highlightedValue)\r\n    }\r\n\r\n    this.sortServers()\r\n  }\r\n\r\n  sortServers = () => {\r\n    const sortOption = SORT_OPTIONS[this._sortOptionIndex]\r\n\r\n    const sortedServers = this._app.serverRegistry.getServerRegistrations().sort((a, b) => {\r\n      if (a.isFavorite && !b.isFavorite) {\r\n        return -1\r\n      } else if (b.isFavorite && !a.isFavorite) {\r\n        return 1\r\n      }\r\n\r\n      return sortOption.sortFunc(a, b)\r\n    })\r\n\r\n    // Test if sortedServers has changed from the previous listing\r\n    // This avoids DOM updates and graphs being redrawn\r\n    const sortedServerIds = sortedServers.map(server => server.serverId)\r\n\r\n    if (this._lastSortedServers) {\r\n      let allMatch = true\r\n\r\n      // Test if the arrays have actually changed\r\n      // No need to length check, they are the same source data each time\r\n      for (let i = 0; i < sortedServerIds.length; i++) {\r\n        if (sortedServerIds[i] !== this._lastSortedServers[i]) {\r\n          allMatch = false\r\n          break\r\n        }\r\n      }\r\n\r\n      if (allMatch) {\r\n        return\r\n      }\r\n    }\r\n\r\n    this._lastSortedServers = sortedServerIds\r\n\r\n    // Sort a ServerRegistration list by the sortOption ONLY\r\n    // This is used to determine the ServerRegistration's rankIndex without #isFavorite skewing values\r\n    const rankIndexSort = this._app.serverRegistry.getServerRegistrations().sort(sortOption.sortFunc)\r\n\r\n    // Update the DOM structure\r\n    sortedServers.forEach(function (serverRegistration) {\r\n      const parentElement = document.getElementById('server-list')\r\n      const serverElement = document.getElementById(`container_${serverRegistration.serverId}`)\r\n\r\n      parentElement.appendChild(serverElement)\r\n\r\n      // Set the ServerRegistration's rankIndex to its indexOf the normal sort\r\n      serverRegistration.updateServerRankIndex(rankIndexSort.indexOf(serverRegistration))\r\n    })\r\n  }\r\n}\r\n","import uPlot from 'uplot'\r\n\r\nimport { RelativeScale } from './scale'\r\n\r\nimport { formatNumber, formatTimestampSeconds } from './util'\r\nimport { uPlotTooltipPlugin } from './plugins'\r\n\r\nimport { FAVORITE_SERVERS_STORAGE_KEY } from './favorites'\r\n\r\nconst HIDDEN_SERVERS_STORAGE_KEY = 'minetrack_hidden_servers'\r\nconst SHOW_FAVORITES_STORAGE_KEY = 'minetrack_show_favorites'\r\n\r\nexport class GraphDisplayManager {\r\n  constructor (app) {\r\n    this._app = app\r\n    this._graphData = []\r\n    this._graphTimestamps = []\r\n    this._hasLoadedSettings = false\r\n    this._initEventListenersOnce = false\r\n    this._showOnlyFavorites = false\r\n  }\r\n\r\n  addGraphPoint (timestamp, playerCounts) {\r\n    if (!this._hasLoadedSettings) {\r\n      // _hasLoadedSettings is controlled by #setGraphData\r\n      // It will only be true once the context has been loaded and initial payload received\r\n      // #addGraphPoint should not be called prior to that since it means the data is racing\r\n      // and the application has received updates prior to the initial state\r\n      return\r\n    }\r\n\r\n    // Calculate isZoomed before mutating graphData otherwise the indexed values\r\n    // are out of date and will always fail when compared to plotScaleX.min/max\r\n    const plotScaleX = this._plotInstance.scales.x\r\n    const isZoomed = plotScaleX.min > this._graphTimestamps[0] || plotScaleX.max < this._graphTimestamps[this._graphTimestamps.length - 1]\r\n\r\n    this._graphTimestamps.push(timestamp)\r\n\r\n    for (let i = 0; i < playerCounts.length; i++) {\r\n      this._graphData[i].push(playerCounts[i])\r\n    }\r\n\r\n    // Trim all data arrays to only the relevant portion\r\n    // This keeps it in sync with backend data structures\r\n    const graphMaxLength = this._app.publicConfig.graphMaxLength\r\n\r\n    if (this._graphTimestamps.length > graphMaxLength) {\r\n      this._graphTimestamps.splice(0, this._graphTimestamps.length - graphMaxLength)\r\n    }\r\n\r\n    for (const series of this._graphData) {\r\n      if (series.length > graphMaxLength) {\r\n        series.splice(0, series.length - graphMaxLength)\r\n      }\r\n    }\r\n\r\n    // Avoid redrawing the plot when zoomed\r\n    this._plotInstance.setData(this.getGraphData(), !isZoomed)\r\n  }\r\n\r\n  loadLocalStorage () {\r\n    if (typeof localStorage !== 'undefined') {\r\n      const showOnlyFavorites = localStorage.getItem(SHOW_FAVORITES_STORAGE_KEY)\r\n      if (showOnlyFavorites) {\r\n        this._showOnlyFavorites = true\r\n      }\r\n\r\n      // If only favorites mode is active, use the stored favorite servers data instead\r\n      let serverNames\r\n      if (this._showOnlyFavorites) {\r\n        serverNames = localStorage.getItem(FAVORITE_SERVERS_STORAGE_KEY)\r\n      } else {\r\n        serverNames = localStorage.getItem(HIDDEN_SERVERS_STORAGE_KEY)\r\n      }\r\n\r\n      if (serverNames) {\r\n        serverNames = JSON.parse(serverNames)\r\n\r\n        // Iterate over all active serverRegistrations\r\n        // This merges saved state with current state to prevent desyncs\r\n        for (const serverRegistration of this._app.serverRegistry.getServerRegistrations()) {\r\n          // isVisible will be true if showOnlyFavorites && contained in FAVORITE_SERVERS_STORAGE_KEY\r\n          // OR, if it is NOT contains within HIDDEN_SERVERS_STORAGE_KEY\r\n          // Checks between FAVORITE/HIDDEN keys are mutually exclusive\r\n          if (this._showOnlyFavorites) {\r\n            serverRegistration.isVisible = serverNames.indexOf(serverRegistration.data.name) >= 0\r\n          } else {\r\n            serverRegistration.isVisible = serverNames.indexOf(serverRegistration.data.name) < 0\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  updateLocalStorage () {\r\n    if (typeof localStorage !== 'undefined') {\r\n      // Mutate the serverIds array into server names for storage use\r\n      const serverNames = this._app.serverRegistry.getServerRegistrations()\r\n        .filter(serverRegistration => !serverRegistration.isVisible)\r\n        .map(serverRegistration => serverRegistration.data.name)\r\n\r\n      // Only store if the array contains data, otherwise clear the item\r\n      // If showOnlyFavorites is true, do NOT store serverNames since the state will be auto managed instead\r\n      if (serverNames.length > 0 && !this._showOnlyFavorites) {\r\n        localStorage.setItem(HIDDEN_SERVERS_STORAGE_KEY, JSON.stringify(serverNames))\r\n      } else {\r\n        localStorage.removeItem(HIDDEN_SERVERS_STORAGE_KEY)\r\n      }\r\n\r\n      // Only store SHOW_FAVORITES_STORAGE_KEY if true\r\n      if (this._showOnlyFavorites) {\r\n        localStorage.setItem(SHOW_FAVORITES_STORAGE_KEY, true)\r\n      } else {\r\n        localStorage.removeItem(SHOW_FAVORITES_STORAGE_KEY)\r\n      }\r\n    }\r\n  }\r\n\r\n  getVisibleGraphData () {\r\n    return this._app.serverRegistry.getServerRegistrations()\r\n      .filter(serverRegistration => serverRegistration.isVisible)\r\n      .map(serverRegistration => this._graphData[serverRegistration.serverId])\r\n  }\r\n\r\n  getPlotSize () {\r\n    return {\r\n      width: Math.max(window.innerWidth, 800) * 0.9,\r\n      height: 400\r\n    }\r\n  }\r\n\r\n  getGraphData () {\r\n    return [\r\n      this._graphTimestamps,\r\n      ...this._graphData\r\n    ]\r\n  }\r\n\r\n  getGraphDataPoint (serverId, index) {\r\n    const graphData = this._graphData[serverId]\r\n    if (graphData && index < graphData.length && typeof graphData[index] === 'number') {\r\n      return graphData[index]\r\n    }\r\n  }\r\n\r\n  getClosestPlotSeriesIndex (idx) {\r\n    let closestSeriesIndex = -1\r\n    let closestSeriesDist = Number.MAX_VALUE\r\n\r\n    const plotHeight = this._plotInstance.bbox.height / devicePixelRatio\r\n\r\n    for (let i = 1; i < this._plotInstance.series.length; i++) {\r\n      const series = this._plotInstance.series[i]\r\n\r\n      if (!series.show) {\r\n        continue\r\n      }\r\n\r\n      const point = this._plotInstance.data[i][idx]\r\n\r\n      if (typeof point === 'number') {\r\n        const scale = this._plotInstance.scales[series.scale]\r\n        const posY = (1 - ((point - scale.min) / (scale.max - scale.min))) * plotHeight\r\n\r\n        const dist = Math.abs(posY - this._plotInstance.cursor.top)\r\n\r\n        if (dist < closestSeriesDist) {\r\n          closestSeriesIndex = i\r\n          closestSeriesDist = dist\r\n        }\r\n      }\r\n    }\r\n\r\n    return closestSeriesIndex\r\n  }\r\n\r\n  buildPlotInstance (timestamps, data) {\r\n    // Lazy load settings from localStorage, if any and if enabled\r\n    if (!this._hasLoadedSettings) {\r\n      this._hasLoadedSettings = true\r\n\r\n      this.loadLocalStorage()\r\n    }\r\n\r\n    for (const playerCounts of data) {\r\n      // Each playerCounts value corresponds to a ServerRegistration\r\n      // Require each array is the length of timestamps, if not, pad at the start with null values to fit to length\r\n      // This ensures newer ServerRegistrations do not left align due to a lower length\r\n      const lengthDiff = timestamps.length - playerCounts.length\r\n\r\n      if (lengthDiff > 0) {\r\n        const padding = Array(lengthDiff).fill(null)\r\n\r\n        playerCounts.unshift(...padding)\r\n      }\r\n    }\r\n\r\n    this._graphTimestamps = timestamps\r\n    this._graphData = data\r\n\r\n    const series = this._app.serverRegistry.getServerRegistrations().map(serverRegistration => {\r\n      return {\r\n        stroke: serverRegistration.data.color,\r\n        width: 2,\r\n        value: (_, raw) => `${formatNumber(raw)}명`,\r\n        show: serverRegistration.isVisible,\r\n        spanGaps: true,\r\n        points: {\r\n          show: false\r\n        }\r\n      }\r\n    })\r\n\r\n    const tickCount = 10\r\n    const maxFactor = 4\r\n\r\n    // eslint-disable-next-line new-cap\r\n    this._plotInstance = new uPlot({\r\n      plugins: [\r\n        uPlotTooltipPlugin((pos, idx) => {\r\n          if (pos) {\r\n            const closestSeriesIndex = this.getClosestPlotSeriesIndex(idx)\r\n\r\n            const text = this._app.serverRegistry.getServerRegistrations()\r\n              .filter(serverRegistration => serverRegistration.isVisible)\r\n              .sort((a, b) => {\r\n                if (a.isFavorite !== b.isFavorite) {\r\n                  return a.isFavorite ? -1 : 1\r\n                } else {\r\n                  return a.data.name.localeCompare(b.data.name)\r\n                }\r\n              })\r\n              .map(serverRegistration => {\r\n                const point = this.getGraphDataPoint(serverRegistration.serverId, idx)\r\n\r\n                let serverName = serverRegistration.data.name\r\n                if (closestSeriesIndex === serverRegistration.getGraphDataIndex()) {\r\n                  serverName = `<strong>${serverName}</strong>`\r\n                }\r\n                if (serverRegistration.isFavorite) {\r\n                  serverName = `<span class=\"${this._app.favoritesManager.getIconClass(true)}\"></span> ${serverName}`\r\n                }\r\n\r\n                return `${serverName}: ${formatNumber(point)}`\r\n              }).join('<br>') + `<br><br><strong>${formatTimestampSeconds(this._graphTimestamps[idx])}</strong>`\r\n\r\n            this._app.tooltip.set(pos.left, pos.top, 10, 10, text)\r\n          } else {\r\n            this._app.tooltip.hide()\r\n          }\r\n        })\r\n      ],\r\n      ...this.getPlotSize(),\r\n      cursor: {\r\n        y: false\r\n      },\r\n      series: [\r\n        {\r\n        },\r\n        ...series\r\n      ],\r\n      axes: [\r\n        {\r\n          font: '14px \"Open Sans\", sans-serif',\r\n          stroke: '#FFF',\r\n          grid: {\r\n            show: false\r\n          },\r\n          space: 60\r\n        },\r\n        {\r\n          font: '14px \"Open Sans\", sans-serif',\r\n          stroke: '#FFF',\r\n          size: 65,\r\n          grid: {\r\n            stroke: '#333',\r\n            width: 1\r\n          },\r\n          split: () => {\r\n            const visibleGraphData = this.getVisibleGraphData()\r\n            const { scaledMax, scale } = RelativeScale.scaleMatrix(visibleGraphData, tickCount, maxFactor)\r\n            const ticks = RelativeScale.generateTicks(0, scaledMax, scale)\r\n            return ticks\r\n          }\r\n        }\r\n      ],\r\n      scales: {\r\n        y: {\r\n          auto: false,\r\n          range: () => {\r\n            const visibleGraphData = this.getVisibleGraphData()\r\n            const { scaledMin, scaledMax } = RelativeScale.scaleMatrix(visibleGraphData, tickCount, maxFactor)\r\n            return [scaledMin, scaledMax]\r\n          }\r\n        }\r\n      },\r\n      legend: {\r\n        show: false\r\n      }\r\n    }, this.getGraphData(), document.getElementById('big-graph'))\r\n\r\n    // Show the settings-toggle element\r\n    document.getElementById('settings-toggle').style.display = 'inline-block'\r\n  }\r\n\r\n  redraw = () => {\r\n    // Use drawing as a hint to update settings\r\n    // This may cause unnessecary localStorage updates, but its a rare and harmless outcome\r\n    this.updateLocalStorage()\r\n\r\n    // Copy application state into the series data used by uPlot\r\n    for (const serverRegistration of this._app.serverRegistry.getServerRegistrations()) {\r\n      this._plotInstance.series[serverRegistration.getGraphDataIndex()].show = serverRegistration.isVisible\r\n    }\r\n\r\n    this._plotInstance.redraw()\r\n  }\r\n\r\n  requestResize () {\r\n    // Only resize when _plotInstance is defined\r\n    // Set a timeout to resize after resize events have not been fired for some duration of time\r\n    // This prevents burning CPU time for multiple, rapid resize events\r\n    if (this._plotInstance) {\r\n      if (this._resizeRequestTimeout) {\r\n        clearTimeout(this._resizeRequestTimeout)\r\n      }\r\n\r\n      // Schedule new delayed resize call\r\n      // This can be cancelled by #requestResize, #resize and #reset\r\n      this._resizeRequestTimeout = setTimeout(this.resize, 200)\r\n    }\r\n  }\r\n\r\n  resize = () => {\r\n    this._plotInstance.setSize(this.getPlotSize())\r\n\r\n    // undefine value so #clearTimeout is not called\r\n    // This is safe even if #resize is manually called since it removes the pending work\r\n    if (this._resizeRequestTimeout) {\r\n      clearTimeout(this._resizeRequestTimeout)\r\n    }\r\n\r\n    this._resizeRequestTimeout = undefined\r\n  }\r\n\r\n  initEventListeners () {\r\n    if (!this._initEventListenersOnce) {\r\n      this._initEventListenersOnce = true\r\n\r\n      // These listeners should only be init once since they attach to persistent elements\r\n      document.getElementById('settings-toggle').addEventListener('click', this.handleSettingsToggle, false)\r\n\r\n      document.querySelectorAll('.graph-controls-show').forEach((element) => {\r\n        element.addEventListener('click', this.handleShowButtonClick, false)\r\n      })\r\n    }\r\n\r\n    // These listeners should be bound each #initEventListeners call since they are for newly created elements\r\n    document.querySelectorAll('.graph-control').forEach((element) => {\r\n      element.addEventListener('click', this.handleServerButtonClick, false)\r\n    })\r\n  }\r\n\r\n  handleServerButtonClick = (event) => {\r\n    const serverId = parseInt(event.target.getAttribute('minetrack-server-id'))\r\n    const serverRegistration = this._app.serverRegistry.getServerRegistration(serverId)\r\n\r\n    if (serverRegistration.isVisible !== event.target.checked) {\r\n      serverRegistration.isVisible = event.target.checked\r\n\r\n      // Any manual changes automatically disables \"Only Favorites\" mode\r\n      // Otherwise the auto management might overwrite their manual changes\r\n      this._showOnlyFavorites = false\r\n\r\n      this.redraw()\r\n    }\r\n  }\r\n\r\n  handleShowButtonClick = (event) => {\r\n    const showType = event.target.getAttribute('minetrack-show-type')\r\n\r\n    // If set to \"Only Favorites\", set internal state so that\r\n    // visible graphData is automatically updating when a ServerRegistration's #isVisible changes\r\n    // This is also saved and loaded by #loadLocalStorage & #updateLocalStorage\r\n    this._showOnlyFavorites = showType === 'favorites'\r\n\r\n    let redraw = false\r\n\r\n    this._app.serverRegistry.getServerRegistrations().forEach(function (serverRegistration) {\r\n      let isVisible\r\n      if (showType === 'all') {\r\n        isVisible = true\r\n      } else if (showType === 'none') {\r\n        isVisible = false\r\n      } else if (showType === 'favorites') {\r\n        isVisible = serverRegistration.isFavorite\r\n      }\r\n\r\n      if (serverRegistration.isVisible !== isVisible) {\r\n        serverRegistration.isVisible = isVisible\r\n        redraw = true\r\n      }\r\n    })\r\n\r\n    if (redraw) {\r\n      this.redraw()\r\n      this.updateCheckboxes()\r\n    }\r\n  }\r\n\r\n  handleSettingsToggle = () => {\r\n    const element = document.getElementById('big-graph-controls-drawer')\r\n\r\n    if (element.style.display !== 'block') {\r\n      element.style.display = 'block'\r\n    } else {\r\n      element.style.display = 'none'\r\n    }\r\n  }\r\n\r\n  handleServerIsFavoriteUpdate = (serverRegistration) => {\r\n    // When in \"Only Favorites\" mode, visibility is dependent on favorite status\r\n    // Redraw and update elements as needed\r\n    if (this._showOnlyFavorites && serverRegistration.isVisible !== serverRegistration.isFavorite) {\r\n      serverRegistration.isVisible = serverRegistration.isFavorite\r\n\r\n      this.redraw()\r\n      this.updateCheckboxes()\r\n    }\r\n  }\r\n\r\n  updateCheckboxes () {\r\n    document.querySelectorAll('.graph-control').forEach((checkbox) => {\r\n      const serverId = parseInt(checkbox.getAttribute('minetrack-server-id'))\r\n      const serverRegistration = this._app.serverRegistry.getServerRegistration(serverId)\r\n\r\n      checkbox.checked = serverRegistration.isVisible\r\n    })\r\n  }\r\n\r\n  reset () {\r\n    // Destroy graphs and unload references\r\n    // uPlot#destroy handles listener de-registration, DOM reset, etc\r\n    if (this._plotInstance) {\r\n      this._plotInstance.destroy()\r\n      this._plotInstance = undefined\r\n    }\r\n\r\n    this._graphTimestamps = []\r\n    this._graphData = []\r\n    this._hasLoadedSettings = false\r\n\r\n    // Fire #clearTimeout if the timeout is currently defined\r\n    if (this._resizeRequestTimeout) {\r\n      clearTimeout(this._resizeRequestTimeout)\r\n\r\n      this._resizeRequestTimeout = undefined\r\n    }\r\n\r\n    // Reset modified DOM structures\r\n    document.getElementById('big-graph-checkboxes').innerHTML = ''\r\n    document.getElementById('big-graph-controls').style.display = 'none'\r\n\r\n    document.getElementById('settings-toggle').style.display = 'none'\r\n  }\r\n}\r\n","export const FAVORITE_SERVERS_STORAGE_KEY = 'minetrack_favorite_servers'\r\n\r\nexport class FavoritesManager {\r\n  constructor (app) {\r\n    this._app = app\r\n  }\r\n\r\n  loadLocalStorage () {\r\n    if (typeof localStorage !== 'undefined') {\r\n      let serverNames = localStorage.getItem(FAVORITE_SERVERS_STORAGE_KEY)\r\n      if (serverNames) {\r\n        serverNames = JSON.parse(serverNames)\r\n\r\n        for (let i = 0; i < serverNames.length; i++) {\r\n          const serverRegistration = this._app.serverRegistry.getServerRegistration(serverNames[i])\r\n\r\n          // The serverName may not exist in the backend configuration anymore\r\n          // Ensure serverRegistration is defined before mutating data or considering valid\r\n          if (serverRegistration) {\r\n            serverRegistration.isFavorite = true\r\n\r\n            // Update icon since by default it is unfavorited\r\n            document.getElementById(`favorite-toggle_${serverRegistration.serverId}`).setAttribute('class', this.getIconClass(serverRegistration.isFavorite))\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  updateLocalStorage () {\r\n    if (typeof localStorage !== 'undefined') {\r\n      // Mutate the serverIds array into server names for storage use\r\n      const serverNames = this._app.serverRegistry.getServerRegistrations()\r\n        .filter(serverRegistration => serverRegistration.isFavorite)\r\n        .map(serverRegistration => serverRegistration.data.name)\r\n\r\n      if (serverNames.length > 0) {\r\n        // Only save if the array contains data, otherwise clear the item\r\n        localStorage.setItem(FAVORITE_SERVERS_STORAGE_KEY, JSON.stringify(serverNames))\r\n      } else {\r\n        localStorage.removeItem(FAVORITE_SERVERS_STORAGE_KEY)\r\n      }\r\n    }\r\n  }\r\n\r\n  handleFavoriteButtonClick = (serverRegistration) => {\r\n    serverRegistration.isFavorite = !serverRegistration.isFavorite\r\n\r\n    // Update the displayed favorite icon\r\n    document.getElementById(`favorite-toggle_${serverRegistration.serverId}`).setAttribute('class', this.getIconClass(serverRegistration.isFavorite))\r\n\r\n    // Request the app controller instantly re-sort the server listing\r\n    // This handles the favorite sorting logic internally\r\n    this._app.sortController.sortServers()\r\n\r\n    this._app.graphDisplayManager.handleServerIsFavoriteUpdate(serverRegistration)\r\n\r\n    // Write an updated settings payload\r\n    this.updateLocalStorage()\r\n  }\r\n\r\n  getIconClass (isFavorite) {\r\n    if (isFavorite) {\r\n      return 'icon-star server-is-favorite'\r\n    } else {\r\n      return 'icon-star-o server-is-not-favorite'\r\n    }\r\n  }\r\n}\r\n","import { formatNumber, formatPercent } from './util'\r\n\r\nexport class PercentageBar {\r\n  constructor (app) {\r\n    this._app = app\r\n    this._parent = document.getElementById('perc-bar')\r\n  }\r\n\r\n  redraw = () => {\r\n    const serverRegistrations = this._app.serverRegistry.getServerRegistrations().sort(function (a, b) {\r\n      return a.playerCount - b.playerCount\r\n    })\r\n\r\n    const totalPlayers = this._app.getTotalPlayerCount()\r\n\r\n    let leftPadding = 0\r\n\r\n    for (const serverRegistration of serverRegistrations) {\r\n      const width = Math.round((serverRegistration.playerCount / totalPlayers) * this._parent.offsetWidth)\r\n\r\n      // Update position/width\r\n      // leftPadding is a sum of previous iterations width value\r\n      const div = document.getElementById(`perc-bar-part_${serverRegistration.serverId}`) || this.createPart(serverRegistration)\r\n\r\n      const widthPixels = `${width}px`\r\n      const leftPaddingPixels = `${leftPadding}px`\r\n\r\n      // Only redraw if needed\r\n      if (div.style.width !== widthPixels || div.style.left !== leftPaddingPixels) {\r\n        div.style.width = widthPixels\r\n        div.style.left = leftPaddingPixels\r\n      }\r\n\r\n      leftPadding += width\r\n    }\r\n  }\r\n\r\n  createPart (serverRegistration) {\r\n    const div = document.createElement('div')\r\n\r\n    div.id = `perc-bar-part_${serverRegistration.serverId}`\r\n    div.style.background = serverRegistration.data.color\r\n\r\n    div.setAttribute('class', 'perc-bar-part')\r\n    div.setAttribute('minetrack-server-id', serverRegistration.serverId)\r\n\r\n    this._parent.appendChild(div)\r\n\r\n    // Define events once during creation\r\n    div.addEventListener('mouseover', this.handleMouseOver, false)\r\n    div.addEventListener('mouseout', this.handleMouseOut, false)\r\n\r\n    return div\r\n  }\r\n\r\n  handleMouseOver = (event) => {\r\n    const serverId = parseInt(event.target.getAttribute('minetrack-server-id'))\r\n    const serverRegistration = this._app.serverRegistry.getServerRegistration(serverId)\r\n\r\n    this._app.tooltip.set(event.target.offsetLeft, event.target.offsetTop, 10, this._parent.offsetTop + this._parent.offsetHeight + 10,\r\n      `${typeof serverRegistration.rankIndex !== 'undefined' ? `#${serverRegistration.rankIndex + 1} ` : ''}\r\n      ${serverRegistration.data.name}<br>\r\n      ${formatNumber(serverRegistration.playerCount)} Players<br>\r\n      <strong>${formatPercent(serverRegistration.playerCount, this._app.getTotalPlayerCount())}</strong>`)\r\n  }\r\n\r\n  handleMouseOut = () => {\r\n    this._app.tooltip.hide()\r\n  }\r\n\r\n  reset () {\r\n    // Reset modified DOM elements\r\n    this._parent.innerHTML = ''\r\n  }\r\n}\r\n"],"names":["App","app","document","addEventListener","init","window","percentageBar","redraw","graphDisplayManager","requestResize","ServerRegistry","SocketManager","SortController","GraphDisplayManager","PercentageBar","FavoritesManager","Tooltip","Caption","formatNumber","constructor","_defineProperty","serverId","payload","timestampPoints","serverRegistration","serverRegistry","createServerRegistration","initServerStatus","playerCountHistory","addGraphPoints","playerCount","buildPlotInstance","updateServerStatus","publicConfig","minecraftVersions","initEventListeners","totalPlayerCount","getTotalPlayerCount","_lastTotalPlayerCount","getElementById","innerText","serverRegistrationCount","getServerRegistrations","length","_lastServerRegistrationCount","tooltip","caption","socketManager","sortController","favoritesManager","_taskIds","createWebSocket","setPageReady","isReady","style","display","setPublicConfig","graphDurationLabel","_formatGraphDurationLabel","assignServers","servers","initTasks","label","match","hours","parseInt","days","Math","floor","weeks","handleSyncComplete","hide","loadLocalStorage","show","updateGlobalStats","push","setInterval","sortServers","handleDisconnect","reset","undefined","forEach","clearInterval","map","reduce","sum","current","uPlot","RelativeScale","formatTimestampSeconds","formatDate","formatMinecraftServerAddress","formatMinecraftVersions","uPlotTooltipPlugin","MISSING_FAVICON","Object","values","_registeredServers","_app","_serverIdsByName","_serverDataById","i","data","name","serverData","ServerRegistration","getServerRegistration","serverKey","innerHTML","_graphData","_failedSequentialPings","getGraphDataIndex","points","slice","tickCount","_plotInstance","plugins","pos","id","set","left","top","height","width","cursor","y","drag","setScale","x","sync","key","setSeries","series","stroke","value","_","raw","spanGaps","axes","ticks","font","size","grid","split","scaledMin","scaledMax","scale","generateTicks","scales","auto","range","legend","handlePing","timestamp","serverGraphMaxLength","shift","setData","updateServerRankIndex","rankIndex","_renderValue","prefix","handler","labelElement","valueElement","targetElement","_hideValue","element","ping","versions","type","recordData","title","lastRecordData","graphPeakData","lastPeakData","error","message","favicon","faviconElement","getAttribute","setAttribute","latestPing","serverElement","createElement","ip","port","getIconClass","isFavorite","appendChild","updateHighlightedValue","selectedCategory","category","handleFavoriteButtonClick","maxFactor","min","max","calculateBounds","factor","pow","scaleMatrix","nonNullData","flat","filter","val","a","b","Number","NEGATIVE_INFINITY","isFiniteOrZero","step","POSITIVE_INFINITY","isFinite","_div","offsetX","offsetY","html","tooltipWidth","offsetWidth","innerWidth","text","MINECRAFT_DEFAULT_PORTS","includes","knownVersions","currentVersionGroup","versionGroups","versionGroup","startVersion","endVersion","join","secs","date","Date","setUTCSeconds","toLocaleTimeString","toLocaleDateString","formatPercent","over","round","toString","replace","onHover","hooks","u","root","querySelector","onmouseenter","onmouseleave","setCursor","idx","bounds","getBoundingClientRect","pageXOffset","pageYOffset","_hasRequestedHistoryGraph","_reconnectDelayBase","webSocketProtocol","location","protocol","_webSocket","WebSocket","host","onopen","onclose","event","code","scheduleReconnect","onmessage","JSON","parse","config","isGraphVisible","sendHistoryGraphRequest","serverPayload","addServer","updates","serverUpdate","updateHistoryGraph","addGraphPoint","update","timestamps","graphData","lastRowCounter","controlsHTML","sort","serverName","isVisible","_reconnectDelaySeconds","reconnectInterval","send","SORT_OPTIONS","getName","sortFunc","highlightedValue","testFunc","SORT_OPTION_INDEX_DEFAULT","SORT_OPTION_INDEX_STORAGE_KEY","_sortOptionIndex","sortOption","updateSortOption","updateLocalStorage","_textElement","sortedServers","sortedServerIds","server","_lastSortedServers","allMatch","rankIndexSort","parentElement","indexOf","_buttonElement","removeEventListener","handleSortByButtonClick","localStorage","sortOptionIndex","getItem","setItem","removeItem","FAVORITE_SERVERS_STORAGE_KEY","HIDDEN_SERVERS_STORAGE_KEY","SHOW_FAVORITES_STORAGE_KEY","setSize","getPlotSize","_resizeRequestTimeout","clearTimeout","target","checked","_showOnlyFavorites","showType","updateCheckboxes","_graphTimestamps","_hasLoadedSettings","_initEventListenersOnce","playerCounts","plotScaleX","isZoomed","graphMaxLength","splice","getGraphData","showOnlyFavorites","serverNames","stringify","getVisibleGraphData","getGraphDataPoint","index","getClosestPlotSeriesIndex","closestSeriesIndex","closestSeriesDist","MAX_VALUE","plotHeight","bbox","devicePixelRatio","point","posY","dist","abs","lengthDiff","padding","Array","fill","unshift","color","localeCompare","space","visibleGraphData","setTimeout","resize","handleSettingsToggle","querySelectorAll","handleShowButtonClick","handleServerButtonClick","checkbox","destroy","handleServerIsFavoriteUpdate","serverRegistrations","totalPlayers","leftPadding","_parent","div","createPart","widthPixels","leftPaddingPixels","offsetLeft","offsetTop","offsetHeight","background","handleMouseOver","handleMouseOut"],"version":3,"file":"index.dc50790c.js.map","sourceRoot":"../"}